"use strict";(self.webpackChunk_antv_g6_site=self.webpackChunk_antv_g6_site||[]).push([[2643],{47421:function(n,e,t){t.d(e,{w:function(){return a}});var a=(0,t(44194).createContext)({})},97190:function(n,e,t){t.r(e),t.d(e,{default:function(){return i}});t(44194);var a=t(30116),o=t(47421),r=t(31549);function i(){var n=(0,a.pC)();return(0,r.jsx)(o.w.Provider,{value:{meta:{exampleTopics:[{id:"feature",title:{zh:"特性",en:"Feature"},icon:"gallery",examples:[{demos:[{id:"switch",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*jCYaT7L2E7sAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst themes = {\n  '🌞 Light': {\n    background: '#fff',\n    theme: 'light',\n    node: {\n      palette: {\n        type: 'group',\n        field: 'cluster',\n      },\n    },\n  },\n  '🌚 Dark': {\n    background: '#000',\n    theme: 'dark',\n    node: {\n      palette: {\n        type: 'group',\n        field: 'cluster',\n      },\n    },\n  },\n  '🌎 Blue': {\n    background: '#f3faff',\n    theme: 'light',\n    node: {\n      palette: {\n        type: 'group',\n        field: 'cluster',\n        color: 'blues',\n        invert: true,\n      },\n    },\n  },\n  '🌕 Yellow': {\n    background: '#fcf9f1',\n    theme: 'light',\n    node: {\n      palette: {\n        type: 'group',\n        field: 'cluster',\n        color: ['#ffe7ba', '#ffd591', '#ffc069', '#ffa940', '#fa8c16', '#d46b08', '#ad4e00', '#873800', '#612500'],\n      },\n    },\n  },\n};\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      padding: 20,\n      autoFit: 'view',\n      theme: 'light',\n      data,\n      node: {\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      layout: {\n        type: 'circular',\n      },\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      gui.add({ theme: '🌞 Light' }, 'theme', Object.keys(themes)).onChange((theme) => {\n        graph.setOptions(themes[theme]);\n        graph.render();\n      });\n    });\n  });\n",title:{zh:"主题切换",en:"Switch Theme"},filename:"switch.js",isNew:!1}],icon:"",id:"theme",title:{en:"Theme",zh:"主题"},childrenKey:"demos",order:0}],childrenKey:"examples"},{id:"scene-case",title:{zh:"场景案例",en:"Scene Case"},icon:"gallery",examples:[{demos:[{id:"battle-array",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*dTxvSL2wgDIAAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, register } from '@antv/g6';\nimport { ReactNode } from '@antv/g6-extension-react';\nimport styled from 'styled-components';\n\nconst Player = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Shirt = styled.div`\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n\n  img {\n    width: 40px;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n`;\n\nconst Number = styled.div`\n  color: #fff;\n  font-family: 'DingTalk-JinBuTi';\n  font-size: 10px;\n  top: 20px;\n  left: 15px;\n  z-index: 1;\n  margin-top: 16px;\n  margin-left: -2px;\n`;\n\nconst Label = styled.div`\n  max-width: 120px;\n  padding: 0 8px;\n  color: #fff;\n  font-size: 10px;\n  background-image: url('https://mdn.alipayobjects.com/huamei_92awrc/afts/img/A*s2csQ48M0AkAAAAAAAAAAAAADsvfAQ/original');\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst PlayerNode = ({ playerInfo }) => {\n  const { isTeamA, player_shirtnumber, player_name } = playerInfo;\n  return (\n    <Player>\n      <Shirt>\n        <img\n          src={\n            isTeamA\n              ? 'https://mdn.alipayobjects.com/huamei_92awrc/afts/img/A*0oAaS42vqWcAAAAAAAAAAAAADsvfAQ/original'\n              : 'https://mdn.alipayobjects.com/huamei_92awrc/afts/img/A*BYH5SauBNecAAAAAAAAAAAAADsvfAQ/original'\n          }\n        />\n        <Number>{player_shirtnumber}</Number>\n      </Shirt>\n      <Label>{player_name}</Label>\n    </Player>\n  );\n};\n\nregister(ExtensionCategory.NODE, 'react', ReactNode);\n\nconst data = {\n  nodes: [\n    {\n      id: '50251337',\n      x: 50,\n      y: 68,\n      isTeamA: '1',\n      player_id: '50251337',\n      player_shirtnumber: '19',\n      player_enName: 'Justin Kluivert',\n      player_name: '尤斯廷-克鲁伊维特',\n    },\n    {\n      id: '50436685',\n      x: 25,\n      y: 68,\n      isTeamA: '1',\n      player_id: '50436685',\n      player_shirtnumber: '24',\n      player_enName: 'Antoine Semenyo',\n      player_name: '塞门约',\n    },\n    {\n      id: '50204813',\n      x: 50,\n      y: 89,\n      isTeamA: '1',\n      player_id: '50204813',\n      player_shirtnumber: '9',\n      player_enName: 'Dominic Solanke',\n      player_name: '索兰克',\n    },\n    {\n      id: '50250175',\n      x: 75,\n      y: 68,\n      isTeamA: '1',\n      player_id: '50250175',\n      player_shirtnumber: '16',\n      player_enName: 'Marcus Tavernier',\n      player_name: '塔韦尼耶',\n    },\n    {\n      id: '50213675',\n      x: 65,\n      y: 48,\n      isTeamA: '1',\n      player_id: '50213675',\n      player_shirtnumber: '4',\n      player_enName: 'Lewis Cook',\n      player_name: '刘易斯-库克',\n    },\n    {\n      id: '50186648',\n      x: 35,\n      y: 48,\n      isTeamA: '1',\n      player_id: '50186648',\n      player_shirtnumber: '10',\n      player_enName: 'Ryan Christie',\n      player_name: '克里斯蒂',\n    },\n    {\n      id: '50279448',\n      x: 38,\n      y: 28,\n      isTeamA: '1',\n      player_id: '50279448',\n      player_shirtnumber: '6',\n      player_enName: 'Chris Mepham',\n      player_name: '迈帕姆',\n    },\n    {\n      id: '50061646',\n      x: 15,\n      y: 28,\n      isTeamA: '1',\n      player_id: '50061646',\n      player_shirtnumber: '15',\n      player_enName: 'Adam Smith',\n      player_name: '亚当-史密斯',\n    },\n    {\n      id: '50472140',\n      x: 62,\n      y: 28,\n      isTeamA: '1',\n      player_id: '50472140',\n      player_shirtnumber: '27',\n      player_enName: 'Ilya Zabarnyi',\n      player_name: '扎巴尔尼',\n    },\n    {\n      id: '50544346',\n      x: 85,\n      y: 28,\n      isTeamA: '1',\n      player_id: '50544346',\n      player_shirtnumber: '3',\n      player_enName: 'Milos Kerkez',\n      player_name: '科尔克兹',\n    },\n    {\n      id: '50062598',\n      x: 50,\n      y: 7,\n      isTeamA: '1',\n      player_id: '50062598',\n      player_shirtnumber: '1',\n      player_enName: 'Neto',\n      player_name: '内托',\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  animation: false,\n  x: 10,\n  y: 50,\n  width: 480,\n  height: 720,\n  background:\n    'url(https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*EmPXQLrX2xIAAAAAAAAAAAAADmJ7AQ/original)no-repeat',\n  node: {\n    type: 'react',\n    style: {\n      size: [120, 60],\n      ports: [{ placement: 'center' }],\n      x: (d) => d.x * 3.5,\n      y: (d) => d.y * 3.5,\n      fill: 'transparent',\n      component: (data) => <PlayerNode playerInfo={data} />,\n    },\n  },\n});\n\ngraph.render();\n",title:{zh:"英格兰阵容",en:"England"},filename:"battle-array.jsx",isNew:!1}],icon:"",id:"euro-cup",title:{en:"Euro Cup",zh:"欧洲杯"},childrenKey:"demos",order:0}],childrenKey:"examples"},{id:"layout",title:{zh:"图布局",en:"Graph Layout"},icon:"net",examples:[{demos:[{id:"force",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*sA14SZo9BBMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          ports: [],\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      layout: {\n        type: 'force',\n        linkDistance: 50,\n        clustering: true,\n        nodeClusterBy: 'cluster',\n        clusterNodeStrength: 70,\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"Force 聚类",en:"Clustering Force Layout"},filename:"force.js",isNew:!1},{id:"atlas2",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-HgiS6CyuuEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      layout: {\n        type: 'force-atlas2',\n        preventOverlap: true,\n        kr: 20,\n        center: [250, 250],\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n      autoResize: true,\n      zoomRange: [0.1, 5],\n    });\n\n    graph.render();\n  });\n",title:{zh:"Force Atlas 2",en:"Force-Atlas 2 Layout"},filename:"atlas2.js",isNew:!1},{id:"d3-force",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-_sFS5IRGGcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          ports: [],\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      layout: {\n        type: 'd3force',\n        collide: {\n          strength: 0.5,\n        },\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"D3 力导向布局",en:"D3 Force Layout"},filename:"d3-force.js",isNew:!1},{id:"3d-force",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*4mbSTJLOXkgAAAAAAAAAAAAADmJ7AQ/original",source:"import { CameraSetting, ExtensionCategory, Graph, register } from '@antv/g6';\nimport { Light, Line3D, ObserveCanvas3D, Sphere, ZoomCanvas3D, renderer } from '@antv/g6-extension-3d';\n\nregister(ExtensionCategory.PLUGIN, '3d-light', Light);\nregister(ExtensionCategory.NODE, 'sphere', Sphere);\nregister(ExtensionCategory.EDGE, 'line3d', Line3D);\nregister(ExtensionCategory.PLUGIN, 'camera-setting', CameraSetting);\nregister(ExtensionCategory.BEHAVIOR, 'zoom-canvas-3d', ZoomCanvas3D);\nregister(ExtensionCategory.BEHAVIOR, 'observe-canvas-3d', ObserveCanvas3D);\n\nfetch('https://assets.antv.antgroup.com/g6/d3-force-3d.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      renderer,\n      data,\n      layout: {\n        type: 'd3-force-3d',\n      },\n      node: {\n        type: 'sphere',\n        style: {\n          materialType: 'phong',\n        },\n        palette: {\n          color: 'tableau',\n          type: 'group',\n          field: 'group',\n        },\n      },\n      edge: {\n        type: 'line3d',\n      },\n      behaviors: ['observe-canvas-3d', 'zoom-canvas-3d'],\n      plugins: [\n        {\n          type: 'camera-setting',\n          projectionMode: 'perspective',\n          near: 0.1,\n          far: 1000,\n          fov: 45,\n          aspect: 1,\n        },\n        {\n          type: '3d-light',\n          directional: {\n            direction: [0, 0, 1],\n          },\n        },\n      ],\n    });\n\n    graph.render();\n  });\n",title:{zh:"3D 力导向布局",en:"3D Force Layout"},filename:"3d-force.js",isNew:!1},{id:"mesh",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ykD5QqSEgeEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfunction getData(size = 10) {\n  const nodes = Array.from({ length: size * size }, (_, i) => ({ id: `${i}` }));\n  const edges = [];\n  for (let y = 0; y < size; ++y) {\n    for (let x = 0; x < size; ++x) {\n      if (y > 0) edges.push({ source: `${(y - 1) * size + x}`, target: `${y * size + x}` });\n      if (x > 0) edges.push({ source: `${y * size + (x - 1)}`, target: `${y * size + x}` });\n    }\n  }\n  return { nodes, edges };\n}\n\nconst graph = new Graph({\n  data: getData(),\n  layout: {\n    type: 'd3force',\n    manyBody: {\n      strength: -30,\n    },\n    link: {\n      strength: 1,\n      distance: 20,\n      iterations: 10,\n    },\n  },\n  node: {\n    style: {\n      size: 10,\n      fill: '#000',\n    },\n  },\n  edge: {\n    style: {\n      stroke: '#000',\n    },\n  },\n  behaviors: [{ type: 'drag-element-force' }, 'zoom-canvas'],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  gui.add({ msg: 'Try to drag nodes' }, 'msg').name('Tips').disable();\n});\n",title:{zh:"网格效果",en:"Mesh Layout"},filename:"mesh.js",isNew:!1},{id:"collision",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*yzv_To2Wm_EAAAAAAAAAAAAADmJ7AQ/original",source:"import { BaseBehavior, ExtensionCategory, Graph, invokeLayoutMethod, register } from '@antv/g6';\n\nfunction getData(width, size = 200) {\n  const k = width / 200;\n  const r = randomUniform(k * 2, k * 8);\n  const n = 4;\n  return {\n    nodes: Array.from({ length: size }, (_, i) => ({ id: `${i}`, data: { r: r(), group: i && (i % n) + 1 } })),\n    edges: [],\n  };\n}\n\nfunction randomUniform(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) (max = min), (min = 0);\n  else max -= min;\n  return function () {\n    return Math.random() * max + min;\n  };\n}\n\nclass CollisionElement extends BaseBehavior {\n  constructor(context) {\n    super(context, {});\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    this.context.graph.on('pointermove', this.onPointerMove);\n  }\n\n  onPointerMove(event) {\n    const pos = this.context.graph.getCanvasByClient([event.client.x, event.client.y]);\n    const layoutInstance = this.context.layout\n      ?.getLayoutInstance()\n      .find((layout) => ['d3-force', 'd3-force-3d'].includes(layout?.id));\n\n    if (layoutInstance) {\n      invokeLayoutMethod(layoutInstance, 'setFixedPosition', '0', [...pos]);\n    }\n  }\n}\n\nregister(ExtensionCategory.BEHAVIOR, 'collision-element', CollisionElement);\n\nconst container = document.getElementById('container');\nconst width = container.scrollWidth;\n\nconst graph = new Graph({\n  container,\n  data: getData(width),\n  layout: {\n    type: 'd3force',\n    alphaTarget: 0.3,\n    velocityDecay: 0.1,\n    x: {\n      strength: 0.01,\n    },\n    y: {\n      strength: 0.01,\n    },\n    collide: {\n      radius: (d) => d.data.r,\n      iterations: 3,\n    },\n    manyBody: {\n      strength: (d, i) => (i ? 0 : (-width * 2) / 3),\n    },\n    link: false,\n  },\n  node: {\n    style: {\n      size: (d) => (d.id === '0' ? 0 : d.data.r * 2),\n    },\n    palette: {\n      color: 'tableau',\n      type: 'group',\n      field: (d) => d.data.group,\n    },\n  },\n  behaviors: ['collision-element'],\n});\n\ngraph.render();\n",title:{zh:"弹性碰撞效果",en:"Collision Layout"},filename:"collision.js",isNew:!1}],icon:"",id:"force-directed",title:{en:"Force-directed Layout",zh:"力导向图布局"},childrenKey:"demos",order:0},{demos:[{id:"antv-dagre",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ESU8SrsUnlwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: '0' },\n    { id: '1' },\n    { id: '2' },\n    { id: '3' },\n    { id: '4' },\n    { id: '5' },\n    { id: '6' },\n    { id: '7' },\n    { id: '8' },\n    { id: '9' },\n  ],\n  edges: [\n    { source: '0', target: '1' },\n    { source: '0', target: '2' },\n    { source: '1', target: '4' },\n    { source: '0', target: '3' },\n    { source: '3', target: '4' },\n    { source: '4', target: '5' },\n    { source: '4', target: '6' },\n    { source: '5', target: '7' },\n    { source: '5', target: '8' },\n    { source: '8', target: '9' },\n    { source: '2', target: '9' },\n    { source: '3', target: '9' },\n  ],\n};\n\nconst container = document.getElementById('container');\n\nconst graph = new Graph({\n  container,\n  animation: false,\n  data,\n  layout: {\n    type: 'antv-dagre',\n    nodesep: 100,\n    ranksep: 70,\n    controlPoints: true,\n  },\n  node: {\n    style: {\n      type: 'rect',\n      size: [60, 30],\n      radius: 8,\n      labelPlacement: 'center',\n      labelText: (d) => d.id,\n    },\n  },\n  edge: {\n    type: 'polyline',\n    style: {\n      endArrow: true,\n      lineWidth: 2,\n      stroke: '#C2C8D5',\n    },\n  },\n  autoFit: 'view',\n  behaviors: ['drag-element', 'drag-canvas', 'zoom-canvas'],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = { layout: 'default' };\n  const layouts = {\n    default: { type: 'antv-dagre', nodesep: 100, ranksep: 70, controlPoints: true },\n    LR: { type: 'antv-dagre', rankdir: 'LR', align: 'DL', nodesep: 50, ranksep: 70, controlPoints: true },\n    'LR&UL': { type: 'antv-dagre', rankdir: 'LR', align: 'UL', controlPoints: true, nodesep: 50, ranksep: 70 },\n  };\n\n  gui.add(config, 'layout', Object.keys(layouts)).onChange(async (layout) => {\n    graph.setLayout(layouts[layout]);\n    await graph.layout();\n    graph.fitCenter();\n  });\n});\n",title:{zh:"Dagre 流程图",en:"Dagre Layout"},filename:"antv-dagre.js",isNew:!1},{id:"antv-dagre-combo",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*h60aQKusJRcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/dagre-combo.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data,\n      node: {\n        type: 'rect',\n        style: {\n          size: [60, 30],\n          radius: 8,\n          labelText: (d) => d.id,\n          labelPlacement: 'center',\n          ports: [{ placement: 'top' }, { placement: 'bottom' }],\n        },\n        palette: {\n          field: (d) => d.combo,\n        },\n      },\n      edge: {\n        type: 'cubic-vertical',\n        style: {\n          endArrow: true,\n        },\n      },\n      combo: {\n        type: 'rect',\n        style: {\n          radius: 8,\n          labelText: (d) => d.id,\n          lineDash: 0,\n          collapsedLineDash: [5, 5],\n        },\n      },\n      layout: {\n        type: 'antv-dagre',\n        ranksep: 50,\n        nodesep: 5,\n        sortByCombo: true,\n      },\n      behaviors: ['drag-element', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"带有 Combo 的流程图",en:"Dagre with Combos"},filename:"antv-dagre-combo.js",isNew:!1},{id:"dagre",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*WqTVSZKaJIYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  zoom: 0.8,\n  data: {\n    nodes: [\n      { id: 'kspacey', data: { label: 'Kevin Spacey', width: 144, height: 100 } },\n      { id: 'swilliams', data: { label: 'Saul Williams', width: 160, height: 100 } },\n      { id: 'bpitt', data: { label: 'Brad Pitt', width: 108, height: 100 } },\n      { id: 'hford', data: { label: 'Harrison Ford', width: 168, height: 100 } },\n      { id: 'lwilson', data: { label: 'Luke Wilson', width: 144, height: 100 } },\n      { id: 'kbacon', data: { label: 'Kevin Bacon', width: 121, height: 100 } },\n    ],\n    edges: [\n      { id: 'kspacey->swilliams', source: 'kspacey', target: 'swilliams' },\n      { id: 'swilliams->kbacon', source: 'swilliams', target: 'kbacon' },\n      { id: 'bpitt->kbacon', source: 'bpitt', target: 'kbacon' },\n      { id: 'hford->lwilson', source: 'hford', target: 'lwilson' },\n      { id: 'lwilson->kbacon', source: 'lwilson', target: 'kbacon' },\n    ],\n  },\n  node: {\n    type: 'rect',\n    style: {\n      radius: 10,\n      iconText: (d) => d.data.label,\n      size: (d) => [d.data.width, d.data.height],\n    },\n    palette: {\n      type: 'group',\n      field: 'label',\n    },\n  },\n  edge: {\n    type: 'polyline',\n    style: {\n      router: true,\n    },\n  },\n  layout: {\n    type: 'dagre',\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"Dagre.js 布局",en:"Dagre.js Layout"},filename:"dagre.js",isNew:!1}],icon:"",id:"dagre",title:{en:"Dagre Layout",zh:"Dagre 布局"},childrenKey:"demos",order:1},{demos:[{id:"combo-combined",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*zPAzSZ3XxpUAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/combo.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'combo-combined',\n        comboPadding: 2,\n      },\n      node: {\n        style: {\n          size: 20,\n          labelText: (d) => d.id,\n        },\n        palette: {\n          type: 'group',\n          field: (d) => d.combo,\n        },\n      },\n      edge: {\n        style: (model) => {\n          const { size, color } = model.data;\n          return {\n            stroke: color || '#99ADD1',\n            lineWidth: size || 1,\n          };\n        },\n      },\n      behaviors: ['drag-element', 'drag-canvas', 'zoom-canvas'],\n      autoFit: 'view',\n    });\n\n    graph.render();\n  });\n",title:{zh:"ComboCombined 组合布局",en:"Combo Combined Layout"},filename:"combo-combined.js",isNew:!1}],icon:"",id:"combo-layout",title:{en:"Combo Layout",zh:"组合布局"},childrenKey:"demos",order:2},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-FgIT7w4OXwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      node: {\n        style: {\n          labelText: (data) => data.id,\n          labelPlacement: 'right',\n          labelMaxWidth: 200,\n          ports: [\n            {\n              placement: 'right',\n            },\n            {\n              placement: 'left',\n            },\n          ],\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n      },\n      layout: {\n        type: 'compact-box',\n        direction: 'LR',\n        getHeight: function getHeight() {\n          return 32;\n        },\n        getWidth: function getWidth() {\n          return 32;\n        },\n        getVGap: function getVGap() {\n          return 10;\n        },\n        getHGap: function getHGap() {\n          return 100;\n        },\n      },\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"紧凑树",en:"CompactBox Layout"},filename:"basic.js",isNew:!1},{id:"vertical",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*KrAqTrFbNjMAAAAAAAAAAABkARQnAQ",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: {\n          labelText: (data) => data.id,\n          labelPlacement: 'right',\n          labelMaxWidth: 200,\n          transform: 'rotate(90deg)',\n          size: 26,\n          fill: '#EFF4FF',\n          lineWidth: 1,\n          stroke: '#5F95FF',\n          ports: [\n            {\n              placement: 'bottom',\n            },\n            {\n              placement: 'top',\n            },\n          ],\n        },\n      },\n      edge: {\n        type: 'cubic-vertical',\n      },\n      layout: {\n        type: 'compact-box',\n        direction: 'TB',\n        getId: function getId(d) {\n          return d.id;\n        },\n        getHeight: function getHeight() {\n          return 16;\n        },\n        getWidth: function getWidth() {\n          return 16;\n        },\n        getVGap: function getVGap() {\n          return 80;\n        },\n        getHGap: function getHGap() {\n          return 20;\n        },\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"从上向下布局",en:"Top to Bottom CompactBox"},filename:"vertical.js",isNew:!1},{id:"horizontal",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*X26MRo25GKgAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      node: {\n        style: {\n          labelText: (data) => data.id,\n          labelPlacement: 'right',\n          labelMaxWidth: 200,\n          size: 12,\n          lineWidth: 1,\n          fill: '#fff',\n          ports: [\n            {\n              placement: 'right',\n            },\n            {\n              placement: 'left',\n            },\n          ],\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n      },\n      layout: {\n        type: 'compact-box',\n        direction: 'LR',\n        getId: function getId(d) {\n          return d.id;\n        },\n        getHeight: function getHeight() {\n          return 16;\n        },\n        getVGap: function getVGap() {\n          return 10;\n        },\n        getHGap: function getHGap() {\n          return 100;\n        },\n        getWidth: function getWidth(d) {\n          return d.id.length + 20;\n        },\n      },\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"节点左对齐的紧凑树",en:"CompactBox with Left Align Nodes"},filename:"horizontal.js",isNew:!1}],icon:"",id:"compact-box",title:{en:"CompactBox",zh:"CompactBox 紧凑树"},childrenKey:"demos",order:3},{demos:[{id:"basic",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*ZSuXQ4PS2F8AAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/circular.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data,\n      layout: {\n        type: 'circular',\n      },\n      node: {\n        style: {\n          size: 20,\n          fill: '#EFF4FF',\n          lineWidth: 1,\n          stroke: '#5F95FF',\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"基本 Circular 布局",en:"Basic Circular Layout"},filename:"basic.js",isNew:!1},{id:"degree",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*MOEeS6ooB7AAAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/circular.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data,\n      layout: {\n        type: 'circular',\n        ordering: 'degree',\n      },\n      node: {\n        style: {\n          size: 20,\n          labelText: (d) => d.id,\n          fill: '#EFF4FF',\n          lineWidth: 1,\n          stroke: '#5F95FF',\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"按照节点度数排序",en:"Degree Ordered"},filename:"degree.js",isNew:!1},{id:"spiral",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*bY0iSqTc3z4AAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/circular.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'circular',\n        startRadius: 10,\n        endRadius: 300,\n      },\n      node: {\n        style: {\n          size: 20,\n          labelText: (d) => d.id,\n          fill: '#EFF4FF',\n          lineWidth: 1,\n          stroke: '#5F95FF',\n        },\n      },\n      edge: {\n        style: {\n          endArrow: true,\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"螺旋线布局",en:"Spiral Layout"},filename:"spiral.js",isNew:!1},{id:"division",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*u30nQahg6q0AAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/circular.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'circular',\n        divisions: 5,\n        radius: 200,\n        startAngle: Math.PI / 4,\n        endAngle: Math.PI,\n      },\n      node: {\n        style: {\n          size: 20,\n          fill: '#EFF4FF',\n          lineWidth: 1,\n          stroke: '#5F95FF',\n        },\n      },\n      edge: {\n        style: {\n          endArrow: true,\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"分割环形布局",en:"Divided Circular Layout"},filename:"division.js",isNew:!1}],icon:"",id:"circular",title:{en:"Circular Layout",zh:"Circular 环形布局"},childrenKey:"demos",order:4},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*P-qOSoDNuckAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          labelPlacement: (model) => (model.children?.length ? 'left' : 'right'),\n          ports: [{ placement: 'right' }, { placement: 'left' }],\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n      },\n      layout: {\n        type: 'dendrogram',\n        direction: 'LR', // H / V / LR / RL / TB / BT\n        nodeSep: 36,\n        rankSep: 250,\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"生态树",en:"Dendrogram Layout"},filename:"basic.js",isNew:!1},{id:"vertical",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*nTKmRKkyUVUAAAAAAAAAAABkARQnAQ",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: (data) => {\n          const isLeaf = !data.children?.length;\n          return {\n            labelText: data.id,\n            labelWordWrap: true,\n            labelWordWrapWidth: 150,\n            labelDx: isLeaf ? 20 : 0,\n            labelDy: isLeaf ? 0 : 20,\n            labelTextAlign: isLeaf ? 'start' : 'center',\n            labelTextBaseline: 'middle',\n            labelTransform: isLeaf ? 'rotate(90deg)' : '',\n            ports: [{ placement: 'bottom' }, { placement: 'top' }],\n          };\n        },\n      },\n      edge: {\n        type: 'cubic-vertical',\n      },\n      layout: {\n        type: 'dendrogram',\n        direction: 'TB', // H / V / LR / RL / TB / BT\n        nodeSep: 40,\n        rankSep: 100,\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand-tree'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"垂直布局",en:"Vertical Layout"},filename:"vertical.js",isNew:!1}],icon:"",id:"dendrogram",title:{en:"Dendrogram",zh:"Dendrogram 生态树"},childrenKey:"demos",order:4},{demos:[{id:"auto-side",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*wRZjTL3fCbEAAAAAAAAAAABkARQnAQ",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: (model) => {\n          const x = +model.style.x;\n          return {\n            labelText: model.id,\n            size: 26,\n            labelPlacement: x > 0 ? 'right' : 'left',\n            labelMaxWidth: 200,\n            labelTextAlign: x > 0 ? 'start' : 'end',\n            lineWidth: 1,\n            stroke: '#5F95FF',\n            fill: '#EFF4FF',\n            ports: [{ placement: 'right' }, { placement: 'left' }],\n          };\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n      },\n      layout: {\n        type: 'mindmap',\n        direction: 'H',\n        getHeight: () => {\n          return 16;\n        },\n        getWidth: () => {\n          return 16;\n        },\n        getVGap: () => {\n          return 10;\n        },\n        getHGap: () => {\n          return 50;\n        },\n      },\n      behaviors: ['collapse-expand', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"子节点自动分布",en:"Auto Mindmap Layout"},filename:"auto-side.js",isNew:!1},{id:"right-side",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*W6OGRLg2UJcAAAAAAAAAAABkARQnAQ",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: (model) => {\n          return {\n            labelText: model.id,\n            size: 26,\n            labelPlacement: 'right',\n            labelMaxWidth: 200,\n            lineWidth: 1,\n            stroke: '#5F95FF',\n            fill: '#EFF4FF',\n            ports: [{ placement: 'right' }, { placement: 'left' }],\n          };\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n      },\n      layout: {\n        type: 'mindmap',\n        direction: 'H',\n        getHeight: () => {\n          return 16;\n        },\n        getWidth: () => {\n          return 16;\n        },\n        getVGap: () => {\n          return 10;\n        },\n        getHGap: () => {\n          return 100;\n        },\n        getSide: () => {\n          return 'right';\n        },\n      },\n      behaviors: ['collapse-expand', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"子节点右侧分布",en:"Right Side Mindmap Layout"},filename:"right-side.js",isNew:!1},{id:"left-side",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*NNUaTaN9yIgAAAAAAAAAAABkARQnAQ",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: (model) => {\n          return {\n            labelText: model.id,\n            size: 26,\n            labelPlacement: 'left',\n            labelMaxWidth: 200,\n            labelTextAlign: 'end',\n            lineWidth: 1,\n            stroke: '#5F95FF',\n            fill: '#EFF4FF',\n            ports: [{ placement: 'right' }, { placement: 'left' }],\n          };\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n      },\n      layout: {\n        type: 'mindmap',\n        direction: 'H',\n        getHeight: () => {\n          return 16;\n        },\n        getWidth: () => {\n          return 16;\n        },\n        getVGap: () => {\n          return 10;\n        },\n        getHGap: () => {\n          return 100;\n        },\n        getSide: () => {\n          return 'left';\n        },\n      },\n      behaviors: ['collapse-expand', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"子节点左侧分布",en:"Left Side Mindmap Layout"},filename:"left-side.js",isNew:!1},{id:"custom-side",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Su39QqQr9PYAAAAAAAAAAABkARQnAQ",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: (model) => {\n          const x = +model.style.x;\n          return {\n            labelText: model.id,\n            size: 26,\n            labelPlacement: x > 0 ? 'right' : 'left',\n            labelMaxWidth: 200,\n            labelTextAlign: x > 0 ? 'start' : 'end',\n            lineWidth: 1,\n            stroke: '#5F95FF',\n            fill: '#EFF4FF',\n            ports: [{ placement: 'right' }, { placement: 'left' }],\n          };\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n      },\n      layout: {\n        type: 'mindmap',\n        direction: 'H',\n        getHeight: () => {\n          return 16;\n        },\n        getWidth: () => {\n          return 16;\n        },\n        getVGap: () => {\n          return 10;\n        },\n        getHGap: () => {\n          return 50;\n        },\n        getSide: (d) => {\n          if (d.id === 'Classification') {\n            return 'left';\n          }\n          return 'right';\n        },\n      },\n      behaviors: ['collapse-expand', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"自定义子节点分布",en:"Custom Mindmap Layout"},filename:"custom-side.js",isNew:!1}],icon:"",id:"mindmap",title:{en:"Mindmap",zh:"Mindmap 脑图树"},childrenKey:"demos",order:5},{demos:[{id:"basic",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*42EXSYyBcTYAAAAAAAAAAABkARQnAQ",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    function createFindParent(tree) {\n      const map = {};\n      function buildMap(node, parent) {\n        if (parent) map[node.id] = parent;\n        node.children?.forEach((child) => buildMap(child, node));\n      }\n      buildMap(tree, null);\n      return (nodeId) => map[nodeId] || null;\n    }\n    const findParent = createFindParent(data);\n\n    const graph = new Graph({\n      container: 'container',\n      data: treeToGraphData(data),\n      autoFit: 'view',\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          labelPlacement: (d) => {\n            const id = d.id;\n            if (id === data.id) return 'top';\n            const lefts = ['Regression', 'Classification'];\n            if (lefts.includes(id) || lefts.includes(findParent(id).id)) return 'left';\n            return 'right';\n          },\n          ports: [{ position: 'center' }],\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n      },\n      layout: {\n        type: 'indented',\n        direction: 'H',\n        indent: 80,\n        getHeight: () => {\n          return 10;\n        },\n        getWidth: () => {\n          return 10;\n        },\n        getSide: (d) => {\n          if (d.id === 'Regression' || d.id === 'Classification') return 'left';\n          return 'right';\n        },\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"缩进树-子节点两侧分布",en:"Two Side Indented Layout"},filename:"basic.js",isNew:!1}],icon:"",id:"indented",title:{en:"Indented",zh:"Indented 缩进树"},childrenKey:"demos",order:6},{demos:[{id:"basic",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Ec_WQ5hqVsgAAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/radial.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'center',\n      layout: {\n        type: 'radial',\n        unitRadius: 100,\n        linkDistance: 200,\n      },\n      node: {\n        style: {\n          fill: '#EFF4FF',\n          labelPlacement: 'center',\n          labelText: (d) => d.id,\n          lineWidth: 1,\n          size: 20,\n          stroke: '#5F95FF',\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"基本 Radial 辐射布局",en:"Basic Radial Layout"},filename:"basic.js",isNew:!1},{id:"prevent-overlap",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*GAFjRJeAoAsAAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/radial.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'center',\n      layout: {\n        type: 'radial',\n        unitRadius: 100,\n        linkDistance: 200,\n        preventOverlap: true,\n        maxPreventOverlapIteration: 100,\n      },\n      node: {\n        style: {\n          fill: '#EFF4FF',\n          labelPlacement: 'center',\n          labelText: (d) => d.id,\n          lineWidth: 1,\n          size: 20,\n          stroke: '#5F95FF',\n        },\n      },\n      edge: {\n        style: {\n          endArrow: true,\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"避免重叠",en:"Prevent Overlap"},filename:"prevent-overlap.js",isNew:!1},{id:"cluster-sort",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*gzfTQKBB62IAAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: '0', data: { type: 'a' } },\n    { id: '1', data: { type: 'a' } },\n    { id: '2', data: { type: 'a' } },\n    { id: '3', data: { type: 'a' } },\n    { id: '4', data: { type: 'c' } },\n    { id: '5', data: { type: 'a' } },\n    { id: '6', data: { type: 'b' } },\n    { id: '7', data: { type: 'b' } },\n    { id: '8', data: { type: 'c' } },\n    { id: '9', data: { type: 'd' } },\n    { id: '10', data: { type: 'd' } },\n    { id: '11', data: { type: 'b' } },\n    { id: '12', data: { type: 'c' } },\n    { id: '13', data: { type: 'b' } },\n    { id: '14', data: { type: 'd' } },\n    { id: '15', data: { type: 'd' } },\n    { id: '16', data: { type: 'b' } },\n    { id: '17', data: { type: 'c' } },\n    { id: '18', data: { type: 'c' } },\n    { id: '19', data: { type: 'b' } },\n    { id: '20', data: { type: 'b' } },\n    { id: '21', data: { type: 'd' } },\n    { id: '22', data: { type: 'd' } },\n    { id: '23', data: { type: 'd' } },\n    { id: '24', data: { type: 'a' } },\n    { id: '25', data: { type: 'a' } },\n    { id: '26', data: { type: 'b' } },\n    { id: '27', data: { type: 'b' } },\n    { id: '28', data: { type: 'd' } },\n    { id: '29', data: { type: 'c' } },\n    { id: '30', data: { type: 'c' } },\n    { id: '31', data: { type: 'b' } },\n    { id: '32', data: { type: 'b' } },\n    { id: '33', data: { type: 'a' } },\n  ],\n  edges: [\n    { source: '0', target: '1' },\n    { source: '0', target: '2' },\n    { source: '0', target: '3' },\n    { source: '0', target: '4' },\n    { source: '0', target: '5' },\n    { source: '0', target: '7' },\n    { source: '0', target: '8' },\n    { source: '0', target: '9' },\n    { source: '0', target: '10' },\n    { source: '0', target: '11' },\n    { source: '0', target: '13' },\n    { source: '0', target: '14' },\n    { source: '0', target: '15' },\n    { source: '0', target: '16' },\n    { source: '2', target: '3' },\n    { source: '4', target: '5' },\n    { source: '4', target: '6' },\n    { source: '5', target: '6' },\n    { source: '7', target: '13' },\n    { source: '8', target: '14' },\n    { source: '9', target: '10' },\n    { source: '10', target: '22' },\n    { source: '10', target: '14' },\n    { source: '10', target: '12' },\n    { source: '10', target: '24' },\n    { source: '10', target: '21' },\n    { source: '10', target: '20' },\n    { source: '11', target: '24' },\n    { source: '11', target: '22' },\n    { source: '11', target: '14' },\n    { source: '12', target: '13' },\n    { source: '16', target: '17' },\n    { source: '16', target: '18' },\n    { source: '16', target: '21' },\n    { source: '16', target: '22' },\n    { source: '17', target: '18' },\n    { source: '17', target: '20' },\n    { source: '18', target: '19' },\n    { source: '19', target: '20' },\n    { source: '19', target: '33' },\n    { source: '19', target: '22' },\n    { source: '19', target: '23' },\n    { source: '20', target: '21' },\n    { source: '21', target: '22' },\n    { source: '22', target: '24' },\n    { source: '22', target: '25' },\n    { source: '22', target: '26' },\n    { source: '22', target: '23' },\n    { source: '22', target: '28' },\n    { source: '22', target: '30' },\n    { source: '22', target: '31' },\n    { source: '22', target: '32' },\n    { source: '22', target: '33' },\n    { source: '23', target: '28' },\n    { source: '23', target: '27' },\n    { source: '23', target: '29' },\n    { source: '23', target: '30' },\n    { source: '23', target: '31' },\n    { source: '23', target: '33' },\n    { source: '32', target: '33' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: {\n    linkDistance: 10,\n    maxIteration: 1000,\n    nodeSize: 30,\n    preventOverlap: true,\n    sortBy: 'type',\n    sortStrength: 50,\n    type: 'radial',\n    unitRadius: 70,\n  },\n  node: {\n    style: {\n      labelText: (d) => d.id,\n      labelPlacement: 'center',\n      size: 20,\n    },\n    palette: {\n      type: 'group',\n      field: 'type',\n    },\n  },\n  edge: {\n    style: {\n      endArrow: true,\n    },\n  },\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"排序聚类",en:"Cluster Sort"},filename:"cluster-sort.js",isNew:!1}],icon:"",id:"radial",title:{en:"Radial Layout",zh:"Radial 辐射布局"},childrenKey:"demos",order:7},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*KXunQKOLCSAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/8dacf27e-e1bc-4522-b6d3-4b6d9b9ed7df.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'center',\n      data,\n      layout: {\n        type: 'concentric',\n        maxLevelDiff: 0.5,\n        sortBy: 'degree',\n        preventOverlap: true,\n      },\n      node: {\n        style: {\n          size: 5,\n          stroke: '#5B8FF9',\n          fill: '#C6E5FF',\n          lineWidth: 1,\n        },\n      },\n      edge: {\n        type: 'line',\n        style: {\n          stroke: '#E2E2E2',\n        },\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"Concentric 同心圆布局",en:"Concentric Layout"},filename:"basic.js",isNew:!1}],icon:"",id:"concentric",title:{en:"Concentric Layout",zh:"Concentric 同心圆布局"},childrenKey:"demos",order:10},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*8RYVTrENVCcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'grid',\n        sortBy: 'id',\n      },\n      node: {\n        style: {\n          size: 20,\n          stroke: '#ccc',\n          lineWidth: 1,\n          labelText: (d) => d.id,\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element', 'click-select'],\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      gui.add({ sortBy: 'id' }, 'sortBy', ['id', 'cluster']).onChange((type) => {\n        graph.setLayout({\n          type: 'grid',\n          sortBy: type,\n        });\n        graph.layout();\n      });\n    });\n  });\n",title:{zh:"Grid 网格布局",en:"Grid Layout"},filename:"basic.js",isNew:!1}],icon:"",id:"grid",title:{en:"Grid",zh:"Grid 网格布局"},childrenKey:"demos",order:11},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*myM6T6R_d34AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      padding: 20,\n      autoFit: 'view',\n      data,\n      layout: {\n        type: 'mds',\n        linkDistance: 100,\n      },\n      node: {\n        style: {\n          size: 20,\n          stroke: '#9ec9ff',\n          fill: '#eee',\n          lineWidth: 1,\n          labelText: (d) => d.id,\n          labelFontSize: 12,\n          labelPlacement: 'center',\n          labelBackground: false,\n        },\n      },\n      behaviors: ['drag-element', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"基本 MDS 布局",en:"Basic MDS Layout"},filename:"basic.js",isNew:!1}],icon:"",id:"mds",title:{en:"MDS Layout",zh:"MDS 布局"},childrenKey:"demos",order:12},{demos:[{id:"basic",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*1KY7SLEXxqMAAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'fruchterman',\n        gravity: 5,\n        speed: 5,\n        animated: true,\n      },\n      node: {\n        style: {\n          size: 20,\n          labelPlacement: 'center',\n          labelText: (d) => d.id,\n          labelBackground: false,\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"基本 Fruchterman 布局",en:"Basic Fruchterman Layout"},filename:"basic.js",isNew:!1},{id:"cluster",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-s9CTphuwgcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'fruchterman',\n        gravity: 10,\n        speed: 5,\n        clustering: true,\n        nodeClusterBy: 'cluster',\n      },\n      node: {\n        style: {\n          size: 20,\n          labelPlacement: 'center',\n          labelText: (d) => d.id,\n          labelBackground: false,\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      edge: {\n        style: {\n          endArrow: true,\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"基本 Fruchterman 布局",en:"Basic Fruchterman Layout"},filename:"cluster.js",isNew:!1},{id:"run-in-web-worker",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*3gn9TZ3oUoIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, GraphEvent } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'fruchterman',\n        speed: 20,\n        gravity: 10,\n        maxIteration: 10000,\n        workerEnabled: true,\n      },\n      node: {\n        style: {\n          size: 20,\n          labelText: (d) => d.id,\n          labelPlacement: 'center',\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      edge: {\n        style: {\n          stroke: '#ddd',\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      const msg = gui.add({ msg: 'Running...' }, 'msg').name('Tips').disable();\n      graph.on(GraphEvent.AFTER_LAYOUT, () => {\n        msg.setValue('Layout Done!');\n      });\n    });\n  });\n",title:{zh:"使用 Web-worker",en:"Run in Web-worker"},filename:"run-in-web-worker.js",isNew:!1},{id:"run-in-gpu",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*SmXBQ6fv8PoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, register } from '@antv/g6';\nimport { FruchtermanLayout } from '@antv/layout-gpu';\n\nregister('layout', 'fruchterman-gpu', FruchtermanLayout);\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/7bacd7d1-4119-4ac1-8be3-4c4b9bcbc25f.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        style: {\n          size: 5,\n        },\n      },\n      edge: {\n        style: {\n          startArrow: true,\n        },\n      },\n      layout: {\n        type: 'fruchterman',\n        speed: 20,\n        gravity: 1,\n        maxIteration: 10000,\n        workerEnabled: true,\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"使用 GPU 加速",en:"Run in GPU"},filename:"run-in-gpu.js",isNew:!1}],icon:"",id:"fruchterman",title:{en:"Fruchterman Layout",zh:"Fruchterman 图布局"},childrenKey:"demos",order:13},{demos:[{id:"switch",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*aGiCRrsJeCUAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      layout: {\n        type: 'circular',\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-node'],\n      data,\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      gui\n        .add({ layout: 'circular' }, 'layout', ['circular', 'grid', 'force', 'radial', 'concentric', 'mds'])\n        .onChange((layout) => {\n          const options = {\n            circular: { type: 'circular' },\n            grid: { type: 'grid' },\n            force: { type: 'force', preventOverlap: true },\n            radial: { type: 'radial', preventOverlap: true },\n            concentric: { type: 'concentric' },\n            mds: { type: 'mds', linkDistance: 100 },\n          };\n          graph.stopLayout();\n          graph.setLayout(options[layout]);\n          graph.layout();\n        });\n    });\n  });\n",title:{zh:"布局切换",en:"Switch Layout"},filename:"switch.js",isNew:!1},{id:"change-data",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Cq8SRL2NZtYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst fetchData = async (type) => {\n  if (type === 'large') {\n    const data = await fetch('https://assets.antv.antgroup.com/g6/cluster.json').then((res) => res.json());\n    return data;\n  }\n  return {\n    nodes: [{ id: 'b0' }, { id: 'b1' }, { id: 'b2' }, { id: 'b3' }, { id: 'b4' }, { id: 'b5' }],\n    edges: [\n      { source: 'b0', target: 'b1' },\n      { source: 'b0', target: 'b2' },\n      { source: 'b0', target: 'b3' },\n      { source: 'b0', target: 'b4' },\n      { source: 'b0', target: 'b5' },\n    ],\n  };\n};\n\nfetchData('small').then((data) => {\n  const graph = new Graph({\n    container: 'container',\n    behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n    layout: {\n      type: 'force',\n      animated: true,\n      linkDistance: 100,\n      preventOverlap: true,\n    },\n    data,\n  });\n\n  graph.render();\n\n  window.addPanel((gui) => {\n    gui.add({ type: 'small' }, 'type', ['small', 'large']).onChange((type) => {\n      fetchData(type).then((data) => {\n        graph.setData(data);\n        graph.render();\n      });\n    });\n  });\n});\n",title:{zh:"数据动态切换",en:"Change Data"},filename:"change-data.js",isNew:!1}],icon:"",id:"mechanism",title:{en:"Layout Mechanism",zh:"布局机制"},childrenKey:"demos",order:15},{demos:[{id:"bi-graph",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*G4-YT4NDA2oAAAAAAAAAAAAADmJ7AQ/original",source:"import { BaseLayout, ExtensionCategory, Graph, register } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: '0', data: { cluster: 'A' } },\n    { id: '1', data: { cluster: 'A' } },\n    { id: '2', data: { cluster: 'A' } },\n    { id: '3', data: { cluster: 'A' } },\n    { id: '4', data: { cluster: 'A' } },\n    { id: '5', data: { cluster: 'A' } },\n    { id: '6', data: { cluster: 'B' } },\n    { id: '7', data: { cluster: 'B' } },\n    { id: '8', data: { cluster: 'B' } },\n    { id: '9', data: { cluster: 'B' } },\n  ],\n  edges: [\n    { source: '0', target: '6' },\n    { source: '0', target: '7' },\n    { source: '0', target: '9' },\n    { source: '1', target: '6' },\n    { source: '1', target: '9' },\n    { source: '1', target: '7' },\n    { source: '2', target: '8' },\n    { source: '2', target: '9' },\n    { source: '2', target: '6' },\n    { source: '3', target: '8' },\n    { source: '4', target: '6' },\n    { source: '4', target: '7' },\n    { source: '5', target: '9' },\n  ],\n};\n\nclass BiLayout extends BaseLayout {\n  id = 'bi-layout';\n\n  async execute(data, options) {\n    const { sep = 100, nodeSep = 20, nodeSize = 32 } = { ...this.options, ...options };\n\n    const [A, B] = data.nodes.reduce(\n      (acc, curr) => {\n        acc[curr.data.cluster === 'A' ? 0 : 1].push(curr);\n        return acc;\n      },\n      [[], []],\n    );\n\n    return {\n      nodes: [\n        ...A.map((node, i) => ({\n          id: node.id,\n          style: {\n            x: i * (nodeSep + nodeSize),\n            y: 0,\n          },\n        })),\n        ...B.map((node, i) => ({\n          id: node.id,\n          style: {\n            x: i * (nodeSep + nodeSize),\n            y: sep,\n          },\n        })),\n      ],\n    };\n  }\n}\n\nregister(ExtensionCategory.LAYOUT, 'bi', BiLayout);\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  animation: false,\n  autoFit: 'center',\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n    palette: {\n      type: 'group',\n      field: 'cluster',\n    },\n  },\n  layout: {\n    type: 'bi',\n    biSep: 300,\n    nodeSep: 20,\n    nodeSize: 32,\n  },\n  behaviors: ['drag-canvas', 'drag-element', 'zoom-canvas'],\n});\n\ngraph.render();\n",title:{zh:"二分图布局",en:"Bi-graph Layout"},filename:"bi-graph.js",isNew:!1},{id:"arc",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*_eivQrJXt8sAAAAAAAAAAABkARQnAQ",source:"import { BaseEdge, BaseLayout, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass ArcLayout extends BaseLayout {\n  async execute(data, options) {\n    const { nodeSep = 20, nodeSize } = { ...this.options, ...options };\n    const { nodes } = data;\n    return {\n      nodes: nodes.map((node, index) => ({\n        id: node.id,\n        style: {\n          x: index * (nodeSep + nodeSize),\n          y: 0,\n        },\n      })),\n    };\n  }\n}\n\nclass ArcEdge extends BaseEdge {\n  getKeyPath(attributes) {\n    const [sourcePoint, targetPoint] = this.getEndpoints(attributes);\n    const [sx, sy] = sourcePoint;\n    const [tx] = targetPoint;\n    const r = Math.abs(tx - sx) / 2;\n\n    return [\n      ['M', sx, sy],\n      ['A', r, r, 0, 0, sx < tx ? 1 : 0, tx, sy],\n    ];\n  }\n}\n\nregister(ExtensionCategory.LAYOUT, 'arc', ArcLayout);\nregister(ExtensionCategory.EDGE, 'arc', ArcEdge);\n\nconst palette = {\n  analytics: 'rgb(158, 1, 66)',\n  data: 'rgb(213, 62, 79)',\n  animate: 'rgb(244, 109, 67)',\n  display: 'rgb(253, 174, 97)',\n  flex: 'rgb(254, 224, 139)',\n  physics: 'rgb(230, 245, 152)',\n  query: 'rgb(171, 221, 164)',\n  scale: 'rgb(102, 194, 165)',\n  util: 'rgb(50, 136, 189)',\n  vis: 'rgb(94, 79, 162)',\n};\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/70cde3be-22e8-4291-98f1-4d5a5b75b62f.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const getCluster = (id) => data.nodes.find((node) => node.id === id).cluster;\n\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      animation: false,\n      node: {\n        style: {\n          size: 20,\n          fill: (d) => palette[d.cluster],\n          ports: [{ position: 'top' }],\n          labelText: (d) => d.name,\n          labelTextAlign: 'start',\n          labelTextBaseline: 'middle',\n          labelTransform: 'rotate(90)',\n        },\n      },\n      edge: {\n        type: 'arc',\n        style: {\n          stroke: (d) => `linear-gradient(${palette[getCluster(d.source)]}, ${palette[getCluster(d.source)]})`,\n          strokeOpacity: 0.5,\n        },\n      },\n      layout: {\n        type: 'arc',\n        nodeSize: 20,\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"弧线图",en:"Arc Diagram"},filename:"arc.js",isNew:!1}],icon:"",id:"custom",title:{en:"Custom Layout",zh:"自定义布局"},childrenKey:"demos",order:16}],childrenKey:"examples"},{id:"element",title:{zh:"元素",en:"Element"},icon:"shape",examples:[{demos:[{id:"circle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*SuPdRLp1PQgAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'circle',\n        style: {\n          size: 40,\n          labelText: (d) => d.id,\n          iconHeight: 20,\n          iconWidth: 20,\n          iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"圆形",en:"Circle"},filename:"circle.js",isNew:!1},{id:"rect",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*etLSQYZnJAAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'rect',\n        style: {\n          size: 40,\n          labelText: (d) => d.id,\n          iconHeight: 20,\n          iconWidth: 20,\n          iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"矩形",en:"Rect"},filename:"rect.js",isNew:!1},{id:"rounded-rect",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*r03cSIy59-UAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'rect',\n        style: {\n          radius: 4, // 👈🏻 Set the radius.\n          size: 40,\n          labelText: (d) => d.id,\n          iconWidth: 20,\n          iconHeight: 20,\n          iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"圆角矩形",en:"Radius Rect"},filename:"rounded-rect.js",isNew:!1},{id:"diamond",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*oUSlSZt6rCoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'diamond',\n        style: {\n          size: 40,\n          labelText: (d) => d.id,\n          iconWidth: 20,\n          iconHeight: 20,\n          iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"菱形",en:"Diamond"},filename:"diamond.js",isNew:!1},{id:"hexagon",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*muosSr4ft8QAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'hexagon',\n        style: {\n          size: 40,\n          labelText: (d) => d.id,\n          iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"六边形",en:"Hexagon"},filename:"hexagon.js",isNew:!1},{id:"triangle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*BW_sSbWVQowAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'triangle',\n        style: {\n          size: 40,\n          direction: (d) => (d.id === 'ports' ? 'left' : undefined),\n          labelText: (d) => d.id,\n          iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n          ports: (d) =>\n            d.id === 'ports' ? [{ placement: 'left' }, { placement: 'top' }, { placement: 'bottom' }] : [],\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"三角形",en:"Triangle"},filename:"triangle.js",isNew:!1},{id:"image",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*NPG3SL_n-CYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'image',\n        style: {\n          size: 40,\n          labelText: (d) => d.id,\n          src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n          haloStroke: '#227eff',\n        },\n        state: {\n          inactive: {\n            fillOpacity: 0.5,\n          },\n          disabled: {\n            fillOpacity: 0.2,\n          },\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"图片",en:"Image"},filename:"image.js",isNew:!1},{id:"ellipse",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Vdq4Rb3ESOoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'ellipse',\n        style: {\n          size: [45, 35],\n          labelText: (d) => d.id,\n          iconHeight: 20,\n          iconWidth: 20,\n          iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"椭圆",en:"Ellipse"},filename:"ellipse.js",isNew:!1},{id:"star",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*YSVjSLyYNwIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'star',\n        style: {\n          size: 40,\n          labelText: (d) => d.id,\n          iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"星形",en:"Star"},filename:"star.js",isNew:!1},{id:"donut",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*h3eWT4loiTwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-nodes.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      animation: false,\n      data,\n      node: {\n        type: 'donut',\n        style: {\n          size: 80,\n          fill: '#DB9D0D',\n          innerR: 0.5,\n          donuts: (_, index) => {\n            if (index === 0) return [1, 2, 3];\n\n            if (index === 1) {\n              return [\n                { value: 50, color: 'red' },\n                { value: 150, color: 'green' },\n                { value: 100, color: 'blue' },\n              ];\n            }\n\n            if (index === 4) {\n              return [\n                { value: 150, fill: 'pink', stroke: '#fff', lineWidth: 1 },\n                { value: 250, stroke: '#fff', lineWidth: 1 },\n                { value: 200, stroke: '#fff', lineWidth: 1 },\n              ];\n            }\n\n            return [100, 200, 100, 200];\n          },\n          labelText: (d) => d.id,\n          iconHeight: 20,\n          iconWidth: 20,\n          iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\n        },\n      },\n      layout: {\n        type: 'grid',\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"甜甜圈",en:"Donut"},filename:"donut.js",isNew:!1},{id:"3d-node",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*rLPZSqW7LskAAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, register } from '@antv/g6';\nimport {\n  Capsule,\n  Cone,\n  Cube,\n  Cylinder,\n  Light,\n  ObserveCanvas3D,\n  Plane,\n  Sphere,\n  Torus,\n  renderer,\n} from '@antv/g6-extension-3d';\n\nregister(ExtensionCategory.PLUGIN, '3d-light', Light);\nregister(ExtensionCategory.NODE, 'sphere', Sphere);\nregister(ExtensionCategory.NODE, 'plane', Plane);\nregister(ExtensionCategory.NODE, 'cylinder', Cylinder);\nregister(ExtensionCategory.NODE, 'cone', Cone);\nregister(ExtensionCategory.NODE, 'cube', Cube);\nregister(ExtensionCategory.NODE, 'capsule', Capsule);\nregister(ExtensionCategory.NODE, 'torus', Torus);\nregister(ExtensionCategory.BEHAVIOR, 'observe-canvas-3d', ObserveCanvas3D);\n\nconst nodes = [\n  {\n    id: 'node-1',\n    type: 'sphere',\n    style: {\n      texture: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*cdTdTI2bNl8AAAAAAAAAAAAADmJ7AQ/original',\n    },\n  },\n  { id: 'node-2', type: 'plane', style: { size: 50 } },\n  { id: 'node-3', type: 'cylinder' },\n  { id: 'node-4', type: 'cone' },\n  {\n    id: 'node-5',\n    type: 'cube',\n    style: {\n      texture: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n    },\n  },\n  { id: 'node-6', type: 'capsule' },\n  { id: 'node-7', type: 'torus' },\n];\n\nconst graph = new Graph({\n  container: 'container',\n  renderer,\n  data: {\n    nodes,\n  },\n  node: {\n    style: {\n      materialType: 'phong',\n      labelText: (d) => d.id,\n      x: (d) => 100 + (nodes.findIndex((n) => n.id === d.id) % 5) * 100,\n      y: (d) => 100 + Math.floor(nodes.findIndex((n) => n.id === d.id) / 5) * 100,\n    },\n  },\n  plugins: [\n    {\n      type: '3d-light',\n      directional: {\n        direction: [0, 0, 1],\n      },\n    },\n  ],\n  behaviors: ['observe-canvas-3d'],\n});\n\ngraph.render();\n",title:{zh:"3D 节点",en:"3D Node"},filename:"3d-node.js",isNew:!1},{id:"port",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*AvaIRIuptcwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, idOf } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', type: 'circle', style: { x: 80, y: 200, size: 30 } },\n    {\n      id: 'node-2',\n      type: 'rect',\n      style: {\n        x: 250,\n        y: 200,\n        size: 50,\n        port: true,\n        ports: [\n          { key: 'port-1', placement: [0, 0.15] },\n          { key: 'port-2', placement: [0, 0.5] },\n          { key: 'port-3', placement: [0, 0.85] },\n        ],\n      },\n    },\n  ],\n  edges: [\n    { id: 'edge-1', source: 'node-1', target: 'node-2' },\n    { id: 'edge-2', source: 'node-1', target: 'node-2' },\n    { id: 'edge-3', source: 'node-1', target: 'node-2' },\n  ],\n};\n\nconst graph = new Graph({\n  data,\n  edge: {\n    style: {\n      targetPort: (d) => `port-${idOf(d).toString().split('-')[1]}`,\n      endArrow: true,\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = { show: false, position: 'outline' };\n  gui.add(config, 'position', ['outline', 'center']).onChange((value) => {\n    graph.updateNodeData([{ id: 'node-2', style: { portLinkToCenter: value === 'center' } }]);\n    graph.draw();\n  });\n  gui\n    .add(config, 'show')\n    .onChange((value) => {\n      graph.updateNodeData([{ id: 'node-2', style: { portR: value ? 5 : 0 } }]);\n      graph.draw();\n    })\n    .name('show ports');\n});\n",title:{zh:"连接桩",en:"Port"},filename:"port.js",isNew:!1}],icon:"",id:"node",title:{en:"Nodes",zh:"节点"},childrenKey:"demos",order:0},{demos:[{id:"line",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ax2RRKUqXlcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-edges.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      edge: {\n        type: 'line',\n        style: {\n          labelText: (d) => d.id,\n          labelBackground: true,\n          endArrow: true,\n        },\n      },\n      layout: {\n        type: 'radial',\n        unitRadius: 220,\n        linkDistance: 220,\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"直线",en:"Line"},filename:"line.js",isNew:!1},{id:"polyline",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*zw8VRou1mRAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 200, y: 200 } },\n    { id: 'node-2', style: { x: 350, y: 120 } },\n  ],\n  edges: [\n    {\n      id: 'edge-1',\n      source: 'node-1',\n      target: 'node-2',\n      style: { controlPoints: [[300, 190]] },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  edge: {\n    type: 'polyline',\n    style: {\n      controlPoints: (d) => d.style.controlPoints,\n    },\n  },\n  behaviors: [{ type: 'drag-element' }],\n});\n\ngraph.render();\n",title:{zh:"折线-带控制点",en:"Polyline with Control Points"},filename:"polyline.js",isNew:!1},{id:"polyline-orth",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ldO6S4NOfKQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 200, y: 200 } },\n    { id: 'node-2', style: { x: 350, y: 120 } },\n  ],\n  edges: [\n    {\n      id: 'edge-1',\n      source: 'node-1',\n      target: 'node-2',\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  edge: {\n    type: 'polyline',\n    style: {\n      router: true,\n    },\n  },\n  behaviors: [{ type: 'drag-element' }],\n});\n\ngraph.render();\n",title:{zh:"正交线",en:"Orthogonal Line"},filename:"polyline-orth.js",isNew:!1},{id:"polyline-orth-with-cps",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*C9apQa9NioMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 200, y: 200 } },\n    { id: 'node-2', style: { x: 350, y: 120 } },\n    { id: 'node-cp', style: { x: 300, y: 190, size: 5, fill: 'rgb(244, 109, 67)' } },\n  ],\n  edges: [\n    {\n      id: 'edge-1',\n      source: 'node-1',\n      target: 'node-2',\n      style: { controlPoints: [[300, 190]] },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  edge: {\n    type: 'polyline',\n    style: {\n      router: true,\n      controlPoints: (d) => d.style.controlPoints,\n    },\n  },\n  behaviors: [{ type: 'drag-element' }],\n});\n\ngraph.render();\n",title:{zh:"正交线-带控制点",en:"Orthogonal Line with Control Points"},filename:"polyline-orth-with-cps.js",isNew:!1},{id:"loop-polyline",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*OReBSqIkp_cAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3-ports' }, { id: 'node4-ports' }],\n  edges: [\n    {\n      id: 'loop-1',\n      source: 'node1',\n      target: 'node1',\n      placement: 'top',\n    },\n    {\n      id: 'loop-2',\n      source: 'node1',\n      target: 'node1',\n      placement: 'right',\n    },\n    {\n      id: 'loop-3',\n      source: 'node1',\n      target: 'node1',\n      placement: 'bottom',\n    },\n    {\n      id: 'loop-4',\n      source: 'node1',\n      target: 'node1',\n      placement: 'left',\n    },\n    {\n      id: 'loop-5',\n      source: 'node2',\n      target: 'node2',\n      placement: 'top-right',\n    },\n    {\n      id: 'loop-6',\n      source: 'node2',\n      target: 'node2',\n      placement: 'bottom-right',\n    },\n    {\n      id: 'loop-7',\n      source: 'node2',\n      target: 'node2',\n      placement: 'bottom-left',\n    },\n    {\n      id: 'loop-8',\n      source: 'node2',\n      target: 'node2',\n      placement: 'top-left',\n    },\n    {\n      id: 'loop-9',\n      source: 'node3-ports',\n      target: 'node3-ports',\n      style: { sourcePort: 'port1', targetPort: 'port2' },\n    },\n    {\n      id: 'loop-10',\n      source: 'node4-ports',\n      target: 'node4-ports',\n      style: { sourcePort: 'port2', targetPort: 'port2' },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'rect',\n    style: {\n      size: [80, 30],\n      port: (d) => d.id.includes('ports'),\n      portR: 3,\n      ports: [\n        {\n          key: 'port1',\n          placement: [0.7, 0],\n        },\n        {\n          key: 'port2',\n          placement: 'right',\n        },\n      ],\n    },\n  },\n  edge: {\n    type: 'polyline',\n    style: {\n      sourcePort: (d) => d.style.sourcePort,\n      targetPort: (d) => d.style.targetPort,\n      endArrow: true,\n      loopPlacement: (d) => d.placement,\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"折线自环边",en:"Polyline Loop"},filename:"loop-polyline.js",isNew:!1},{id:"quadratic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*RRelQ7VrFc4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-edges.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      edge: {\n        type: 'quadratic',\n        style: {\n          labelText: (d) => d.id,\n          labelBackground: true,\n          endArrow: true,\n        },\n      },\n      layout: {\n        type: 'radial',\n        unitRadius: 220,\n        linkDistance: 220,\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"二次贝塞尔曲线",en:"Quadratic"},filename:"quadratic.js",isNew:!1},{id:"cubic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*cVd-TLQWujYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-edges.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      edge: {\n        type: 'cubic',\n        style: {\n          labelText: (d) => d.id,\n          labelBackground: true,\n          endArrow: true,\n        },\n      },\n      layout: {\n        type: 'radial',\n        unitRadius: 220,\n        linkDistance: 220,\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"三次贝塞尔曲线",en:"Cubic"},filename:"cubic.js",isNew:!1},{id:"vertical-cubic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*wrDlQKxNHNEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-edges.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        style: {\n          port: true,\n          ports: [{ placement: 'top' }, { placement: 'bottom' }],\n        },\n      },\n      edge: {\n        type: 'cubic-vertical',\n        style: {\n          labelText: (d) => d.id,\n          labelBackground: true,\n          endArrow: true,\n        },\n      },\n      layout: {\n        type: 'antv-dagre',\n        begin: [50, 50],\n        rankdir: 'TB',\n        nodesep: 35,\n        ranksep: 150,\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"三次贝塞尔曲线-垂直",en:"Vertical Cubic"},filename:"vertical-cubic.js",isNew:!1},{id:"horizontal-cubic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*6Gj2R50AJ8AAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/element-edges.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        style: {\n          port: true,\n          ports: [{ placement: 'right' }, { placement: 'left' }],\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n        style: {\n          labelText: (d) => d.id,\n          labelBackground: true,\n          endArrow: true,\n        },\n      },\n      layout: {\n        type: 'antv-dagre',\n        rankdir: 'LR',\n        nodesep: 30,\n        ranksep: 150,\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"三次贝塞尔曲线-水平",en:"Horizontal Cubic"},filename:"horizontal-cubic.js",isNew:!1},{id:"loop-curve",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*6Gj2R50AJ8AAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, idOf } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3-ports' }, { id: 'node4-ports' }],\n  edges: [\n    {\n      id: 'loop-1',\n      source: 'node1',\n      target: 'node1',\n      style: { placement: 'top' },\n    },\n    {\n      id: 'loop-2',\n      source: 'node1',\n      target: 'node1',\n      style: { placement: 'right' },\n    },\n    {\n      id: 'loop-3',\n      source: 'node1',\n      target: 'node1',\n      style: { placement: 'bottom' },\n    },\n    {\n      id: 'loop-4',\n      source: 'node1',\n      target: 'node1',\n      style: { placement: 'left' },\n    },\n    {\n      id: 'loop-5',\n      source: 'node2',\n      target: 'node2',\n      style: { placement: 'top-right' },\n    },\n    {\n      id: 'loop-6',\n      source: 'node2',\n      target: 'node2',\n      style: { placement: 'bottom-right' },\n    },\n    {\n      id: 'loop-7',\n      source: 'node2',\n      target: 'node2',\n      style: { placement: 'bottom-left' },\n    },\n    {\n      id: 'loop-8',\n      source: 'node2',\n      target: 'node2',\n      style: { placement: 'top-left' },\n    },\n    {\n      id: 'loop-9',\n      source: 'node3-ports',\n      target: 'node3-ports',\n      style: { sourcePort: 'port1', targetPort: 'port2' },\n    },\n    {\n      id: 'loop-10',\n      source: 'node4-ports',\n      target: 'node4-ports',\n      style: { sourcePort: 'port2', targetPort: 'port2' },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'rect',\n    style: {\n      size: [80, 30],\n      port: (d) => idOf(d).includes('ports'),\n      portR: 3,\n      ports: [\n        {\n          key: 'port1',\n          placement: [0.7, 0],\n        },\n        {\n          key: 'port2',\n          placement: 'right',\n        },\n      ],\n    },\n  },\n  edge: {\n    type: 'line',\n    style: {\n      sourcePort: (d) => d.style.sourcePort,\n      targetPort: (d) => d.style.targetPort,\n      endArrow: true,\n      loopPlacement: (d) => d.style.placement,\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"曲线自环边",en:"Curve Loop"},filename:"loop-curve.js",isNew:!1},{id:"arrows",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*VlxQQoEpTIgAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: new Array(16).fill(0).map((_, i) => ({ id: `node${i + 1}` })),\n  edges: [\n    'default-arrow',\n    'triangle-arrow',\n    'simple-arrow',\n    'vee-arrow',\n    'circle-arrow',\n    'rect-arrow',\n    'diamond-arrow',\n    'triangleRect-arrow',\n  ].map((id, i) => ({\n    id,\n    source: `node${i * 2 + 1}`,\n    target: `node${i * 2 + 2}`,\n  })),\n};\n\nconst graph = new Graph({\n  data,\n  edge: {\n    style: {\n      labelText: (d) => d.id,\n      labelBackground: true,\n      endArrow: true,\n      endArrowType: (d) => d.id.split('-')[0],\n    },\n  },\n  layout: {\n    type: 'grid',\n    cols: 2,\n  },\n});\n\ngraph.render();\n",title:{zh:"箭头",en:"Arrows"},filename:"arrows.js",isNew:!1}],icon:"",id:"edge",title:{en:"Edges",zh:"边"},childrenKey:"demos",order:1},{demos:[{id:"circle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Kbk1S5pzSY0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', combo: 'combo1', style: { x: 250, y: 150 } },\n    { id: 'node2', combo: 'combo1', style: { x: 350, y: 150 } },\n    { id: 'node3', combo: 'combo2', style: { x: 250, y: 300 } },\n  ],\n  edges: [],\n  combos: [{ id: 'combo1', combo: 'combo2' }, { id: 'combo2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  combo: {\n    type: 'circle',\n  },\n  behaviors: ['drag-element', 'collapse-expand'],\n});\n\ngraph.render();\n",title:"圆形",filename:"circle.js",isNew:!1},{id:"rect",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*PKtgSZzmb3YAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', combo: 'combo1', style: { x: 250, y: 150 } },\n    { id: 'node2', combo: 'combo1', style: { x: 350, y: 150 } },\n    { id: 'node3', combo: 'combo2', style: { x: 250, y: 300 } },\n  ],\n  edges: [],\n  combos: [{ id: 'combo1', combo: 'combo2' }, { id: 'combo2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  combo: {\n    type: 'rect',\n    style: {\n      padding: 20,\n    },\n  },\n  behaviors: ['drag-element', 'collapse-expand'],\n});\n\ngraph.render();\n",title:"矩形",filename:"rect.js",isNew:!1}],icon:"",id:"combo",title:{en:"Combos",zh:"组合"},childrenKey:"demos",order:2},{demos:[{id:"copy",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*a-keS4q-nU4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, NodeEvent } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    {\n      id: 'node1',\n      data: {\n        label: 'Click to copy this label which is too long to be displayed',\n      },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      x: 200,\n      y: 200,\n      size: 150,\n      labelPlacement: 'center',\n      labelText: (d) => d.data.label,\n      labelWordWrap: true,\n      labelMaxWidth: '90%',\n      labelBackgroundFill: '#eee',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n      labelPointerEvents: 'none',\n      labelBackgroundPointerEvents: 'none',\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n\ngraph.on('node:click', (e) => {\n  const id = e.target.id;\n  const node = graph.getNodeData(id);\n  const label = node?.data?.label;\n\n  navigator.clipboard.writeText(label);\n  alert('copied to clipboard!');\n});\n\ngraph.on(`node:${NodeEvent.POINTER_ENTER}`, (e) => {\n  graph.setElementState({ [e.target.id]: 'active' });\n});\n\ngraph.on(`node:${NodeEvent.POINTER_OUT}`, (e) => {\n  graph.setElementState({ [e.target.id]: [] });\n});\n",title:{zh:"复制",en:"Copy Content"},filename:"copy.js",isNew:!1},{id:"ellipsis",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-0P0R6AAnuMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 100, y: 150, size: 100 } },\n    { id: 'node-2', style: { x: 400, y: 150, size: 150 } },\n  ],\n  edges: [{ source: 'node-1', target: 'node-2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelPlacement: 'center',\n      labelText: 'This label is too long to be displayed',\n      labelWordWrap: true, // enable label ellipsis\n      labelMaxWidth: '90%',\n      labelBackgroundFill: '#eee',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n    },\n  },\n  edge: {\n    style: {\n      labelOffsetY: -4,\n      labelTextBaseline: 'bottom',\n      labelText: 'This label is too long to be displayed',\n      labelWordWrap: true,\n      labelMaxWidth: '80%',\n      labelBackgroundFill: 'red',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"文本省略",en:"Text Ellipsis"},filename:"ellipsis.js",isNew:!1},{id:"word-wrap",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*N9eHSoiH3bEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 100, y: 150, size: 100 } },\n    { id: 'node-2', style: { x: 400, y: 150, size: 150 } },\n  ],\n  edges: [{ source: 'node-1', target: 'node-2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  fitCenter: true,\n  data,\n  node: {\n    type: 'rect',\n    style: {\n      labelPlacement: 'bottom',\n      labelText: 'This label is too long to be displayed',\n      labelMaxWidth: '90%',\n      labelBackgroundFill: '#eee',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n      labelWordWrap: true,\n      labelMaxLines: 4,\n    },\n  },\n  edge: {\n    style: {\n      labelOffsetY: -4,\n      labelTextBaseline: 'bottom',\n      labelText: 'This label is too long to be displayed',\n      labelMaxWidth: '80%',\n      labelBackgroundFill: 'red',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n      labelWordWrap: true,\n      labelMaxLines: 4,\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"文本换行",en:"Word Wrap"},filename:"word-wrap.js",isNew:!1},{id:"background",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*NG7xT4mkRL4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', style: { x: 150, y: 100 } },\n    { id: 'node2', style: { x: 250, y: 200 } },\n    { id: 'node3', style: { x: 450, y: 200 } },\n  ],\n  edges: [\n    { source: 'node1', target: 'node2' },\n    { source: 'node1', target: 'node3' },\n    { source: 'node2', target: 'node3' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n      labelPosition: 'bottom',\n      labelFill: '#e66465',\n      labelFontSize: 12,\n      labelFontStyle: 'italic',\n      labelBackground: true,\n      labelBackgroundFill: 'linear-gradient(#e66465, #9198e5)',\n      labelBackgroundStroke: '#9ec9ff',\n      labelBackgroundRadius: 2,\n    },\n  },\n  edge: {\n    style: {\n      labelText: (d) => d.id,\n      labelPosition: 'center',\n      labelTextBaseline: 'top',\n      labelDy: 5,\n      labelFontSize: 12,\n      labelFontWeight: 'bold',\n      labelFill: '#1890ff',\n      labelBackground: true,\n      labelBackgroundFill: 'linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%)',\n      labelBackgroundStroke: '#9ec9ff',\n      labelBackgroundRadius: 2,\n    },\n  },\n  layout: {\n    type: 'force',\n  },\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"背景颜色",en:"Background"},filename:"background.js",isNew:!1}],icon:"",id:"label",title:{en:"Label",zh:"标签"},childrenKey:"demos",order:3},{demos:[{id:"react-g",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*b-g0RoOpI3sAAAAAAAAAAABkARQnAQ",source:"import { ExtensionCategory, Graph, register } from '@antv/g6';\nimport { GNode, Group, Image, Rect, Text } from '@antv/g6-extension-react';\n\nregister(ExtensionCategory.NODE, 'g', GNode);\n\nconst Node = ({ data, size }) => {\n  const [width, height] = size;\n\n  const { name, type, status, success, time, failure } = data.data;\n  const color = status === 'success' ? '#30BF78' : '#F4664A';\n  const radius = 4;\n\n  const titleMap = {\n    success: 'Success',\n    time: 'Time',\n    failure: 'Failure',\n  };\n\n  const format = (category, value) => {\n    if (category === 'success') return `${value}%`;\n    if (category === 'time') return `${value}min`;\n    return value.toString();\n  };\n\n  const highlight = (category, value) => {\n    if (category === 'success') {\n      if (value >= 90) return 'green';\n      if (value < 60) return 'red';\n      return 'gray';\n    }\n    if (category === 'time') {\n      if (value <= 10) return 'green';\n      if (value >= 30) return 'red';\n      return 'gray';\n    }\n    if (value >= 20) return 'red';\n    if (value >= 5) return 'orange';\n    return 'gray';\n  };\n\n  return (\n    <Group>\n      <Rect width={width} height={height} stroke={color} fill={'white'} radius={radius}>\n        <Rect width={width} height={20} fill={color} radius={[radius, radius, 0, 0]}>\n          <Image\n            src={\n              type === 'module'\n                ? 'https://gw.alipayobjects.com/mdn/rms_8fd2eb/afts/img/A*0HC-SawWYUoAAAAAAAAAAABkARQnAQ'\n                : 'https://gw.alipayobjects.com/mdn/rms_8fd2eb/afts/img/A*sxK0RJ1UhNkAAAAAAAAAAABkARQnAQ'\n            }\n            x={2}\n            y={2}\n            width={16}\n            height={16}\n          />\n          <Text text={name} textBaseline=\"top\" fill=\"#fff\" fontSize={14} dx={20} dy={2} />\n        </Rect>\n        <Group transform=\"translate(5,40)\">\n          {Object.entries({ success, time, failure }).map(([key, value], index) => (\n            <Group key={index} transform={`translate(${(index * width) / 3}, 0)`}>\n              <Text text={titleMap[key]} fontSize={12} fill=\"gray\" />\n              <Text text={format(key, value)} fontSize={12} dy={16} fill={highlight(key, value)} />\n            </Group>\n          ))}\n        </Group>\n      </Rect>\n    </Group>\n  );\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      {\n        id: 'node-1',\n        data: { name: 'Module', type: 'module', status: 'success', success: 90, time: 58, failure: 8 },\n        style: { x: 100, y: 100 },\n      },\n      {\n        id: 'node-2',\n        data: { name: 'Process', type: 'process', status: 'error', success: 11, time: 12, failure: 26 },\n        style: { x: 300, y: 100 },\n      },\n    ],\n    edges: [{ source: 'node-1', target: 'node-2' }],\n  },\n  node: {\n    type: 'g',\n    style: {\n      size: [180, 60],\n      component: (data) => <Node data={data} size={[180, 60]} />,\n    },\n  },\n  behaviors: ['drag-element', 'zoom-canvas', 'drag-canvas'],\n});\n\ngraph.render();\n",title:{zh:"采用 JSX 语法的 G 节点",en:"G node with JSX syntax"},filename:"react-g.jsx",isNew:!1},{id:"react-node",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*9oz-R7bIkd0AAAAAAAAAAAAADmJ7AQ/original",source:"import { DatabaseFilled } from '@ant-design/icons';\nimport { ExtensionCategory, Graph, register } from '@antv/g6';\nimport { ReactNode } from '@antv/g6-extension-react';\nimport { Badge, Flex, Input, Tag, Typography } from 'antd';\nimport { useEffect, useRef } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nconst { Text } = Typography;\n\nregister(ExtensionCategory.NODE, 'react', ReactNode);\n\nconst Node = ({ data, onChange }) => {\n  const { status, type } = data.data;\n\n  return (\n    <Flex\n      style={{\n        width: '100%',\n        height: '100%',\n        background: '#fff',\n        padding: 10,\n        borderRadius: 5,\n        border: '1px solid gray',\n      }}\n      vertical\n    >\n      <Flex align=\"center\" justify=\"space-between\">\n        <Text>\n          <DatabaseFilled />\n          Server\n          <Tag>{type}</Tag>\n        </Text>\n        <Badge status={status} />\n      </Flex>\n      <Text type=\"secondary\">{data.id}</Text>\n      <Flex align=\"center\">\n        <Text style={{ flexShrink: 0 }}>\n          <Text type=\"danger\">*</Text>URL:\n        </Text>\n        <Input\n          style={{ borderRadius: 0, borderBottom: '1px solid #d9d9d9' }}\n          variant=\"borderless\"\n          value={data.data?.url}\n          onChange={(event) => {\n            const url = event.target.value;\n            onChange?.(url);\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport const ReactNodeDemo = () => {\n  const containerRef = useRef();\n\n  useEffect(() => {\n    const graph = new Graph({\n      container: containerRef.current,\n      data: {\n        nodes: [\n          {\n            id: 'local-server-1',\n            data: { status: 'success', type: 'local', url: 'http://localhost:3000' },\n            style: { x: 50, y: 50 },\n          },\n          {\n            id: 'remote-server-1',\n            data: { status: 'warning', type: 'remote' },\n            style: { x: 350, y: 50 },\n          },\n        ],\n        edges: [{ source: 'local-server-1', target: 'remote-server-1' }],\n      },\n      node: {\n        type: 'react',\n        style: {\n          size: [240, 100],\n          component: (data) => <Node data={data} />,\n        },\n      },\n      behaviors: ['drag-element', 'zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  }, []);\n\n  return <div style={{ width: '100%', height: '100%' }} ref={containerRef}></div>;\n};\n\nconst root = createRoot(document.getElementById('container'));\nroot.render(<ReactNodeDemo />);\n",title:{zh:"React 节点",en:"React node"},filename:"react-node.jsx",isNew:!1},{id:"g2-bar-chart",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*VcCDR5myr70AAAAAAAAAAAAADmJ7AQ/original",source:"import { Rect as RectGeometry } from '@antv/g';\nimport { renderToMountedElement, stdlib } from '@antv/g2';\nimport { ExtensionCategory, Graph, Rect, register } from '@antv/g6';\n\nclass BarChart extends Rect {\n  onCreate() {\n    const [width, height] = this.getSize();\n    const group = this.upsert(\n      'chart-container',\n      RectGeometry,\n      {\n        transform: `translate(${-width / 2}, ${-height / 2})`,\n        width,\n        height,\n        fill: '#fff',\n        stroke: '#697b8c',\n        radius: 10,\n        shadowColor: '#697b8c',\n        shadowBlur: 10,\n        shadowOffsetX: 5,\n        shadowOffsetY: 5,\n      },\n      this.shapeMap.key,\n    );\n\n    const { name, value } = this.attributes;\n    renderToMountedElement(\n      // @antv/g2 Specification\n      // https://g2.antv.antgroup.com/examples/general/interval/#column\n      {\n        width,\n        height,\n        data: { value },\n        title: name,\n        type: 'interval',\n        axis: {\n          x: { title: false },\n          y: { title: false },\n        },\n        scale: {\n          y: { domain: [0, 100] },\n        },\n        encode: {\n          x: 'subject',\n          y: 'score',\n          color: 'subject',\n        },\n        legend: { color: false },\n      },\n      {\n        group,\n        library: stdlib(),\n      },\n    );\n  }\n}\n\nregister(ExtensionCategory.NODE, 'bar-chart', BarChart);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      {\n        id: 'Jack',\n        data: {\n          value: [\n            { subject: 'Math', score: 95 },\n            { subject: 'Chinese', score: 70 },\n            { subject: 'English', score: 75 },\n            { subject: 'Geography', score: 80 },\n            { subject: 'Physics', score: 90 },\n            { subject: 'Chemistry', score: 85 },\n            { subject: 'Biology', score: 70 },\n          ],\n        },\n      },\n      {\n        id: 'Aaron',\n        data: {\n          value: [\n            { subject: 'Math', score: 70 },\n            { subject: 'Chinese', score: 90 },\n            { subject: 'English', score: 90 },\n            { subject: 'Geography', score: 60 },\n            { subject: 'Physics', score: 70 },\n            { subject: 'Chemistry', score: 65 },\n            { subject: 'Biology', score: 80 },\n          ],\n        },\n      },\n      {\n        id: 'Rebecca',\n        data: {\n          value: [\n            { subject: 'Math', score: 60 },\n            { subject: 'Chinese', score: 95 },\n            { subject: 'English', score: 100 },\n            { subject: 'Geography', score: 80 },\n            { subject: 'Physics', score: 60 },\n            { subject: 'Chemistry', score: 90 },\n            { subject: 'Biology', score: 85 },\n          ],\n        },\n      },\n    ],\n  },\n  node: {\n    type: 'bar-chart',\n    style: {\n      size: 250,\n      fillOpacity: 0,\n      name: (d) => d.id,\n      value: (d) => d.data.value,\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"G2 柱状图",en:"G2 bar chart"},filename:"g2-bar-chart.js",isNew:!1},{id:"g2-activity-chart",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*GVyoQKk2WIIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle as CircleGeometry } from '@antv/g';\nimport { renderToMountedElement, stdlib } from '@antv/g2';\nimport { Circle, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass ActivityChart extends Circle {\n  onCreate() {\n    const { value } = this.attributes;\n    const radius = this.shapeMap.key.style.r;\n    const activeRadius = radius / 4;\n    const activeSize = radius / 2;\n\n    const group = this.upsert(\n      'chart-container',\n      CircleGeometry,\n      {\n        r: radius,\n        fill: '#fff',\n      },\n      this.shapeMap.key,\n    );\n\n    renderToMountedElement(\n      // @antv/g2 Specification\n      // https://g2.antv.antgroup.com/examples/general/radial/#apple-activity\n      {\n        x: -radius,\n        y: -radius,\n        width: radius * 2,\n        height: radius * 2,\n        type: 'view',\n        data: value,\n        margin: 0,\n        coordinate: { type: 'radial', innerRadius: 0.2 },\n        children: [\n          {\n            type: 'interval',\n            encode: { x: 'name', y: 1, size: activeSize, color: 'color' },\n            scale: { color: { type: 'identity' } },\n            style: { fillOpacity: 0.25 },\n            animate: false,\n            tooltip: false,\n          },\n          {\n            type: 'interval',\n            encode: { x: 'name', y: 'percent', color: 'color', size: activeSize },\n            style: {\n              radius: activeRadius,\n              shadowColor: 'rgba(0,0,0,0.45)',\n              shadowBlur: 20,\n              shadowOffsetX: -2,\n              shadowOffsetY: -5,\n            },\n            animate: {\n              enter: { type: 'fadeIn', duration: 1000 },\n            },\n            axis: false,\n            tooltip: false,\n          },\n          {\n            type: 'image',\n            encode: { x: 'name', y: 0, src: (d) => d.icon, size: 6 },\n            style: { transform: 'translateX(6)' },\n          },\n        ],\n      },\n      {\n        group,\n        library: stdlib(),\n      },\n    );\n  }\n}\n\nconst people = ['Aaron', 'Rebecca', 'Emily', 'Liam', 'Olivia', 'Ethan', 'Sophia', 'Mason'];\n\nconst mockData = () => {\n  const getRandomPercent = () => +(Math.random() * 0.9 + 0.1).toFixed(1);\n\n  return [\n    {\n      name: 'activity1',\n      percent: getRandomPercent(),\n      color: '#1ad5de',\n      icon: 'https://gw.alipayobjects.com/zos/antfincdn/ck11Y6aRrz/shangjiantou.png',\n    },\n    {\n      name: 'activity2',\n      percent: getRandomPercent(),\n      color: '#a0ff03',\n      icon: 'https://gw.alipayobjects.com/zos/antfincdn/zY2JB7hhrO/shuangjiantou.png',\n    },\n    {\n      name: 'activity3',\n      percent: getRandomPercent(),\n      color: '#e90b3a',\n      icon: 'https://gw.alipayobjects.com/zos/antfincdn/%24qBxSxdK05/jiantou.png',\n    },\n  ];\n};\n\nregister(ExtensionCategory.NODE, 'activity-chart', ActivityChart);\n\nconst graph = new Graph({\n  container: 'container',\n  autoFit: 'view',\n  data: {\n    nodes: people.map((name, i) => ({\n      id: name,\n      style: { value: mockData() },\n    })),\n    edges: people.map((_, i) => {\n      return {\n        id: `edge${i}`,\n        source: people[i],\n        target: people[(i + 1) % 5],\n      };\n    }),\n  },\n  node: {\n    type: 'activity-chart',\n    style: {\n      size: 50,\n      labelText: (d) => d.id,\n      fillOpacity: 0,\n    },\n    animation: {\n      enter: false,\n    },\n  },\n  layout: {\n    type: 'force',\n    preventOverlap: true,\n    animated: false,\n  },\n  behaviors: ['zoom-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"G2 活动图",en:"G2 activity Chart"},filename:"g2-activity-chart.js",isNew:!1}],icon:"",id:"custom-node",title:{en:"Custom Node",zh:"自定义节点"},childrenKey:"demos",order:4},{demos:[{id:"custom-path",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*MPQTSap6ZusAAAAAAAAAAAAADmJ7AQ/original",source:"import { BaseEdge, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass PolylineEdge extends BaseEdge {\n  getKeyPath(attributes) {\n    const [sourcePoint, targetPoint] = this.getEndpoints(attributes);\n\n    return [\n      ['M', sourcePoint[0], sourcePoint[1]],\n      ['L', targetPoint[0] / 2 + (1 / 2) * sourcePoint[0], sourcePoint[1]],\n      ['L', targetPoint[0] / 2 + (1 / 2) * sourcePoint[0], targetPoint[1]],\n      ['L', targetPoint[0], targetPoint[1]],\n    ];\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'custom-polyline', PolylineEdge);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 100, y: 100, ports: [{ key: 'right', placement: [1, 0.5] }] } },\n      { id: 'node-1', style: { x: 250, y: 200, ports: [{ key: 'left', placement: [0, 0.5] }] } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  edge: {\n    type: 'custom-polyline',\n    style: {\n      startArrow: true,\n      endArrow: true,\n      stroke: '#F6BD16',\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"自定义路径",en:"Custom Path"},filename:"custom-path.js",isNew:!1},{id:"extra-label",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*RnE9SL9xkBIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Text } from '@antv/g';\nimport { Renderer } from '@antv/g-svg';\nimport { ExtensionCategory, Graph, Line, register, subStyleProps } from '@antv/g6';\n\nclass LabelEdge extends Line {\n  render(attributes, container) {\n    super.render(attributes);\n    this.drawEndLabel(attributes, container, 'start');\n    this.drawEndLabel(attributes, container, 'end');\n  }\n\n  drawEndLabel(attributes, container, type) {\n    const key = type === 'start' ? 'startLabel' : 'endLabel';\n    const [x, y] = this.getEndpoints(attributes)[type === 'start' ? 0 : 1];\n\n    const fontStyle = {\n      x,\n      y,\n      dx: type === 'start' ? 15 : -15,\n      fontSize: 16,\n      fill: 'gray',\n      textBaseline: 'middle',\n      textAlign: type,\n    };\n    const style = subStyleProps(attributes, key);\n    const text = style.text;\n    this.upsert(`label-${type}`, Text, text ? { ...fontStyle, ...style } : false, container);\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'extra-label-edge', LabelEdge);\n\nconst graph = new Graph({\n  container: 'container',\n  renderer: () => new Renderer(),\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 100, y: 100 } },\n      { id: 'node-1', style: { x: 300, y: 100 } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  edge: {\n    type: 'extra-label-edge',\n    style: {\n      startArrow: true,\n      endArrow: true,\n      stroke: '#F6BD16',\n      startLabelText: 'start',\n      endLabelText: 'end',\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"额外标签",en:"Extra Label"},filename:"extra-label.js",isNew:!1},{id:"custom-arrow",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*6wrVRoF3S98AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: new Array(6).fill(0).map((_, i) => ({ id: `node${i + 1}` })),\n  edges: [\n    {\n      id: 'custom-arrow-1',\n      source: 'node1',\n      target: 'node2',\n      style: {\n        endArrowD: 'M0,0 L10,4 L14,14 L18,4 L28,0 L18,-4 L14,-14 L10,-4 Z',\n        endArrowOffset: 14,\n      },\n    },\n    {\n      id: 'custom-arrow-2',\n      source: 'node3',\n      target: 'node4',\n      style: {\n        endArrowD: 'M 3,-5 L 3,5 L 15,10 L 15,-10 Z',\n        endArrowOffset: 10,\n      },\n    },\n    {\n      id: 'image-arrow',\n      source: 'node5',\n      target: 'node6',\n      style: {\n        endArrowSrc: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        endArrowSize: 28,\n        endArrowTransform: 'rotate(90deg)',\n      },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  data,\n  edge: {\n    style: {\n      stroke: '#F6BD16',\n      labelText: (d) => d.id,\n      labelBackground: true,\n      endArrow: true,\n    },\n  },\n  layout: {\n    type: 'grid',\n    cols: 2,\n  },\n});\n\ngraph.render();\n",title:{zh:"自定义箭头",en:"Custom Arrow"},filename:"custom-arrow.js",isNew:!1},{id:"parallel-edges",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*g2p_Qa_wZcIAAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'A', style: { x: 50, y: 350 } },\n    { id: 'B', style: { x: 250, y: 150 } },\n    { id: 'C', style: { x: 450, y: 350 } },\n  ],\n  edges: [\n    { source: 'A', target: 'C' },\n    { source: 'C', target: 'A' },\n    ...Array.from({ length: 10 }).map((_, i) => ({\n      id: `edge:A-B${i}`,\n      source: 'A',\n      target: 'B',\n      data: {\n        label: `A->B:${i}`,\n      },\n    })),\n    ...Array.from({ length: 5 }).map((_, i) => ({\n      id: `edge:B-C${i}`,\n      source: 'B',\n      target: 'C',\n      data: {\n        label: `B->C:${i}`,\n      },\n    })),\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      ports: [{ placement: 'center' }],\n      labelText: (d) => d.id,\n    },\n  },\n  edge: {\n    style: {\n      labelText: (d) => d?.data?.label || `${d.source}->${d.target}`,\n    },\n  },\n  behaviors: ['drag-element'],\n  transforms: ['process-parallel-edges'],\n});\n\ngraph.render();\n",title:{zh:"平行边",en:"Parallel Edges"},filename:"parallel-edges.js",isNew:!1}],icon:"",id:"custom-edge",title:{en:"Custom Edge",zh:"自定义边"},childrenKey:"demos",order:5},{demos:[{id:"extra-button",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*YBe_Ta8leloAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle, Path } from '@antv/g';\nimport { Renderer } from '@antv/g-svg';\nimport { CircleCombo, ExtensionCategory, Graph, register } from '@antv/g6';\n\nconst collapse = (x, y, r) => {\n  return [\n    ['M', x - r, y],\n    ['a', r, r, 0, 1, 0, r * 2, 0],\n    ['a', r, r, 0, 1, 0, -r * 2, 0],\n    ['M', x - r + 4, y],\n    ['L', x + r - 4, y],\n  ];\n};\n\nconst expand = (x, y, r) => {\n  return [\n    ['M', x - r, y],\n    ['a', r, r, 0, 1, 0, r * 2, 0],\n    ['a', r, r, 0, 1, 0, -r * 2, 0],\n    ['M', x - r + 4, y],\n    ['L', x - r + 2 * r - 4, y],\n    ['M', x - r + r, y - r + 4],\n    ['L', x, y + r - 4],\n  ];\n};\n\nclass CircleComboWithExtraButton extends CircleCombo {\n  render(attributes, container) {\n    super.render(attributes, container);\n    this.drawButton(attributes);\n  }\n\n  drawButton(attributes) {\n    const { collapsed } = attributes;\n    const [, height] = this.getKeySize(attributes);\n    const btnR = 8;\n    const y = height / 2 + btnR;\n    const d = collapsed ? expand(0, y, btnR) : collapse(0, y, btnR);\n\n    const hitArea = this.upsert('hit-area', Circle, { cy: y, r: 10, fill: '#fff', cursor: 'pointer' }, this);\n    this.upsert('button', Path, { stroke: '#3d81f7', d, cursor: 'pointer' }, hitArea);\n  }\n\n  onCreate() {\n    this.shapeMap['hit-area'].addEventListener('click', () => {\n      const id = this.id;\n      const collapsed = !this.attributes.collapsed;\n      const { graph } = this.attributes.context;\n      if (collapsed) graph.collapseElement(id);\n      else graph.expandElement(id);\n    });\n  }\n}\n\nregister(ExtensionCategory.COMBO, 'circle-combo-with-extra-button', CircleComboWithExtraButton);\n\nconst graph = new Graph({\n  container: 'container',\n  renderer: () => new Renderer(),\n  data: {\n    nodes: [\n      { id: 'node-0', combo: 'combo-0', style: { x: 100, y: 100 } },\n      { id: 'node-1', combo: 'combo-0', style: { x: 150, y: 100 } },\n      { id: 'node-2', style: { x: 250, y: 100 } },\n    ],\n    edges: [{ source: 'node-1', target: 'node-2' }],\n    combos: [{ id: 'combo-0' }],\n  },\n  combo: {\n    type: 'circle-combo-with-extra-button',\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"额外按钮",en:"Extra Button"},filename:"extra-button.js",isNew:!1}],icon:"",id:"custom-combo",title:{en:"Custom Combo",zh:"自定义组合"},childrenKey:"demos",order:6}],childrenKey:"examples"},{id:"behavior",title:{zh:"交互",en:"Behavior"},icon:"interaction",examples:[{demos:[{id:"drag",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*0f81RI8DTF0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  layout: {\n    type: 'grid',\n  },\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  behaviors: ['drag-canvas'],\n});\n\ngraph.render();\n",title:{zh:"拖拽画布",en:"Drag Canvas"},filename:"drag.js",isNew:!1},{id:"scroll-xy",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*VoBZR7Z62KEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  layout: {\n    type: 'grid',\n  },\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  behaviors: ['scroll-canvas'],\n});\n\ngraph.render();\n",title:{zh:"XY 轴滚动",en:"Scroll XY"},filename:"scroll-xy.js",isNew:!1},{id:"scroll-y",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*c5DCSoAYsZQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  layout: {\n    type: 'grid',\n  },\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  behaviors: [{ type: 'scroll-canvas', direction: 'y' }],\n});\n\ngraph.render();\n",title:{zh:"Y 轴滚动",en:"Scroll Y"},filename:"scroll-y.js",isNew:!1}],icon:"",id:"canvas",title:{en:"Canvas Manipulation",zh:"画布操作"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Rvx9SYSHGsIAAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node1', combo: 'combo1', style: { x: 350, y: 200 } },\n      { id: 'node2', combo: 'combo1', style: { x: 350, y: 250 } },\n      { id: 'node3', combo: 'combo3', style: { x: 100, y: 200 } },\n    ],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'combo1', target: 'node3' },\n    ],\n    combos: [{ id: 'combo1', combo: 'combo2' }, { id: 'combo2' }, { id: 'combo3', style: { collapsed: true } }],\n  },\n  behaviors: ['collapse-expand', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"展开/收起",en:"Expand/Collapse"},filename:"basic.js",isNew:!1}],icon:"",id:"combo",title:{en:"Combo Behaviors",zh:"组合交互"},childrenKey:"demos",order:0},{demos:[{id:"by-drag",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*DW16QJNmRm8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  behaviors: [\n    {\n      type: 'create-edge',\n      trigger: 'drag',\n      style: {\n        fill: 'red',\n        lineWidth: 2,\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"通过拖拽创建边",en:"Create Edge by Drag"},filename:"by-drag.js",isNew:!1},{id:"by-click",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*DW16QJNmRm8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  behaviors: [\n    {\n      type: 'create-edge',\n      trigger: 'click',\n      style: {\n        stroke: 'red',\n        lineWidth: 2,\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"通过点击创建边",en:"Create Edge by Click"},filename:"by-click.js",isNew:!1},{id:"between-combos",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Uwn-RZXSXLQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  data: {\n    nodes: [\n      { id: 'node1', combo: 'combo1', style: { x: 250, y: 150 } },\n      { id: 'node2', combo: 'combo1', style: { x: 350, y: 150 } },\n      { id: 'node3', combo: 'combo2', style: { x: 250, y: 300 } },\n    ],\n    combos: [{ id: 'combo1' }, { id: 'combo2', style: { ports: [{ placement: 'center' }] } }],\n  },\n  behaviors: [\n    {\n      type: 'create-edge',\n      trigger: 'drag',\n      style: {\n        lineWidth: 2,\n        lineDash: [2, 3],\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"创建组合间连边",en:"Create Edge Between Combos"},filename:"between-combos.js",isNew:!1},{id:"custom-edge-style",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ccvHTKQ19oMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  behaviors: [\n    {\n      type: 'create-edge',\n      trigger: 'click',\n      onCreate: (edge) => {\n        const { style, ...rest } = edge;\n        return {\n          ...rest,\n          style: {\n            ...style,\n            stroke: 'red',\n            lineWidth: 2,\n            endArrow: true,\n          },\n        };\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"自定义边样式",en:"Custom Edge Style"},filename:"custom-edge-style.js",isNew:!1}],icon:"",id:"create-edge",title:{en:"Create Edge",zh:"创建边"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ph6tS4k6S-oAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', combo: 'combo1', style: { x: 110, y: 150 } },\n    { id: 'node2', combo: 'combo1', style: { x: 190, y: 150 } },\n    { id: 'node3', combo: 'combo2', style: { x: 150, y: 260 } },\n  ],\n  edges: [{ source: 'node1', target: 'node2' }],\n  combos: [{ id: 'combo1', combo: 'combo2' }, { id: 'combo2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  node: {\n    style: { labelText: (d) => d.id },\n  },\n  data,\n  behaviors: ['collapse-expand', 'focus-element'],\n});\n\ngraph.render();\n",title:"点击聚焦",filename:"basic.js",isNew:!1}],icon:"",id:"focus",title:{en:"Focus Element",zh:"元素聚焦"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*7cgmToibajkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst format = (data) => {\n  const { nodes, edges } = data;\n  return {\n    nodes: nodes.map(({ id, ...node }) => ({ id, data: node })),\n    edges: edges.map(({ id, source, target, ...edge }) => ({ id, source, target, data: edge })),\n  };\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/xiaomi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: format(data),\n      behaviors: ['hover-element'],\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        nodeSize: 24,\n      },\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"高亮元素",en:"Hover Element"},filename:"basic.js",isNew:!1},{id:"activate-relations",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*7cgmToibajkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst format = (data) => {\n  const { nodes, edges } = data;\n  return {\n    nodes: nodes.map(({ id, ...node }) => ({ id, data: node })),\n    edges: edges.map(({ id, source, target, ...edge }) => ({ id, source, target, data: edge })),\n  };\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/xiaomi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: format(data),\n      behaviors: [\n        {\n          type: 'hover-element',\n          degree: 1, // 👈🏻 Activate relations.\n        },\n      ],\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        nodeSize: 24,\n      },\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"高亮相邻节点",en:"Activate Relations"},filename:"activate-relations.js",isNew:!1},{id:"config-params",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*AdibQby3Ma0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst format = (data) => {\n  const { nodes, edges } = data;\n  return {\n    nodes: nodes.map(({ id, ...node }) => ({ id, data: node })),\n    edges: edges.map(({ id, source, target, ...edge }) => ({ id, source, target, data: edge })),\n  };\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/xiaomi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: format(data),\n      node: {\n        style: { size: 30 },\n        state: {\n          highlight: {\n            fill: '#D580FF',\n            halo: true,\n            lineWidth: 0,\n          },\n          dim: {\n            fill: '#99ADD1',\n          },\n        },\n      },\n      edge: {\n        state: {\n          highlight: {\n            stroke: '#D580FF',\n          },\n        },\n      },\n      behaviors: [\n        {\n          type: 'hover-element',\n          enable: (event) => event.targetType === 'node',\n          degree: 1, // 👈🏻 Activate relations.\n          activeState: 'highlight',\n          inactiveState: 'dim',\n          onHover: (event) => {\n            event.view.setCursor('pointer');\n          },\n          onHoverEnd: (event) => {\n            event.view.setCursor('default');\n          },\n        },\n      ],\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        nodeSize: 24,\n      },\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"定制参数",en:"Configurations for Activate Relations"},filename:"config-params.js",isNew:!1}],icon:"",id:"highlight-element",title:{en:"Highlight Element",zh:"高亮元素"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ZPt0SKT5JXQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle as CircleGeometry } from '@antv/g';\nimport { CanvasEvent, Circle, ExtensionCategory, Graph, NodeEvent, register } from '@antv/g6';\n\nclass LightNode extends Circle {\n  render(attributes, container) {\n    super.render(attributes, container);\n    this.upsert('light', CircleGeometry, { r: 8, fill: '#0f0', cx: 0, cy: -25 }, container);\n  }\n}\n\nregister(ExtensionCategory.NODE, 'light', LightNode);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node1', style: { x: 100, y: 150 } },\n      { id: 'node2', style: { x: 300, y: 150 } },\n    ],\n    edges: [{ source: 'node1', target: 'node2' }],\n  },\n  node: {\n    type: 'light',\n    style: {\n      size: 100,\n      labelText: (d) => d.style.labelText || 'Click the Light',\n      labelPlacement: 'center',\n      labelBackground: true,\n      labelBackgroundFill: '#fff',\n      labelBackgroundFillOpacity: 0.8,\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n\ngraph.on(`node:${NodeEvent.CLICK}`, (event) => {\n  const { target, originalTarget } = event;\n  if (originalTarget.id === 'light') {\n    graph.updateNodeData([{ id: target.id, states: ['selected'], style: { labelText: 'Clicked!' } }]);\n    graph.draw();\n  }\n});\n\ngraph.on(`canvas:${CanvasEvent.CLICK}`, () => {\n  const selectedIds = graph.getElementDataByState('node', 'selected').map((node) => node.id);\n  graph.updateNodeData(selectedIds.map((id) => ({ id, states: [], style: { labelText: 'Click the Light' } })));\n  graph.draw();\n});\n",title:{zh:"指定图形响应事件",en:"Specify the shape response event"},filename:"basic.js",isNew:!1}],icon:"",id:"inner-event",title:{en:"Inner Element Event",zh:"元素内部事件"},childrenKey:"demos",order:0},{demos:[{id:"click",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*F0RGQ67xbGYAAAAAAAAAAAAAARQnAQ",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', style: { x: 150, y: 250 } },\n    { id: 'node2', style: { x: 350, y: 250 } },\n  ],\n  edges: [{ source: 'node1', target: 'node2' }],\n};\n\nconst graph = new Graph({\n  data,\n  behaviors: [{ type: 'click-element', multiple: true, trigger: ['shift'] }, 'drag-element'],\n  autoFit: 'center',\n});\n\ngraph.render();\n\nconst prompt = document.createElement('div');\nprompt.innerHTML = `👉 Press SHIFT to enable multiple selection`;\nprompt.style.position = 'absolute';\nconst container = document.getElementById('container');\ncontainer.appendChild(prompt);\n",title:{zh:"点选",en:"Click Select"},filename:"click.js",isNew:!1},{id:"brush",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*OeBHQZKfEwsAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-1', style: { x: 200, y: 250 } },\n      { id: 'node-2', style: { x: 250, y: 200 } },\n      { id: 'node-3', style: { x: 300, y: 250 } },\n      { id: 'node-4', style: { x: 250, y: 300 } },\n    ],\n    edges: [\n      { source: 'node-1', target: 'node-2' },\n      { source: 'node-2', target: 'node-3' },\n      { source: 'node-3', target: 'node-4' },\n      { source: 'node-4', target: 'node-1' },\n    ],\n  },\n  behaviors: [\n    {\n      key: 'brush-select',\n      type: 'brush-select',\n      mode: 'diff',\n      trigger: 'shift',\n      style: {\n        fill: '#00f',\n        fillOpacity: 0.2,\n        stroke: '#0ff',\n      },\n    },\n  ],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  gui.add({ trigger: 'shift' }, 'trigger', ['shift', 'alt', 'ctrl', 'drag', 'meta']).onChange((value) => {\n    graph.updateBehavior({ key: 'brush-select', trigger: value });\n  });\n});\n",title:{zh:"框选",en:"Brush Select"},filename:"brush.js",isNew:!1},{id:"brush-combo",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*hE19RZL7iYQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  animation: false,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  data: {\n    nodes: [\n      { id: 'node-1', combo: 'combo1', style: { x: 250, y: 150, lineWidth: 0 } },\n      { id: 'node-2', combo: 'combo1', style: { x: 350, y: 150, lineWidth: 0 } },\n      { id: 'node-3', combo: 'combo2', style: { x: 250, y: 300, lineWidth: 0 } },\n    ],\n    edges: [\n      { target: 'node-1', source: 'node-2' },\n      { target: 'node-1', source: 'node-3' },\n    ],\n    combos: [{ id: 'combo1', combo: 'combo2' }, { id: 'combo2' }],\n  },\n  behaviors: [\n    {\n      type: 'brush-select',\n      immediately: true,\n      mode: 'default',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"框选组合",en:"Brush Combo"},filename:"brush-combo.js",isNew:!1},{id:"lasso",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*GSdRQ5TO9IAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-1', style: { x: 200, y: 250 } },\n      { id: 'node-2', style: { x: 250, y: 200 } },\n      { id: 'node-3', style: { x: 300, y: 250 } },\n      { id: 'node-4', style: { x: 250, y: 300 } },\n    ],\n    edges: [\n      { source: 'node-1', target: 'node-2' },\n      { source: 'node-2', target: 'node-3' },\n      { source: 'node-3', target: 'node-4' },\n      { source: 'node-4', target: 'node-1' },\n    ],\n  },\n  behaviors: [\n    {\n      key: 'lasso-select',\n      type: 'lasso-select',\n      mode: 'diff',\n      trigger: 'shift',\n      style: {\n        fill: '#00f',\n        fillOpacity: 0.1,\n        stroke: '#0ff',\n        lineWidth: 2,\n      },\n    },\n  ],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  gui.add({ trigger: 'shift' }, 'trigger', ['shift', 'alt', 'ctrl', 'drag', 'meta']).onChange((value) => {\n    graph.updateBehavior({ key: 'lasso-select', trigger: value });\n  });\n});\n",title:{zh:"拉索选择",en:"Lasso Select"},filename:"lasso.js",isNew:!1}],icon:"",id:"select",title:{en:"Select",zh:"选中"},childrenKey:"demos",order:0},{demos:[{id:"update",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*DSVuQ6oH_m8AAAAAAAAAAAAADmJ7AQ/original",source:"import { EdgeEvent, Graph, NodeEvent } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    {\n      id: 'node-1',\n      style: { x: 100, y: 150, labelText: 'Hover me!' },\n    },\n    {\n      id: 'node-2',\n      style: { x: 300, y: 150, labelText: 'Hover me!' },\n    },\n  ],\n  edges: [{ source: 'node-1', target: 'node-2', style: { labelText: 'Hover me!' } }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n\ngraph.on(`node:${NodeEvent.POINTER_ENTER}`, (event) => {\n  const { target } = event;\n  graph.updateNodeData([\n    { id: target.id, style: { labelText: 'Hovered', fill: 'lightgreen', labelFill: 'lightgreen' } },\n  ]);\n  graph.draw();\n});\n\ngraph.on(`edge:${EdgeEvent.POINTER_ENTER}`, (event) => {\n  const { target } = event;\n  graph.updateEdgeData([\n    { id: target.id, style: { labelText: 'Hovered', stroke: 'lightgreen', labelFill: 'lightgreen', lineWidth: 3 } },\n  ]);\n  graph.draw();\n});\n\ngraph.on(`node:${NodeEvent.POINTER_OUT}`, (event) => {\n  const { target } = event;\n  graph.updateNodeData([{ id: target.id, style: { labelText: 'Hover me!', fill: '#5B8FF9', labelFill: 'black' } }]);\n  graph.draw();\n});\n\ngraph.on(`edge:${EdgeEvent.POINTER_OUT}`, (event) => {\n  const { target } = event;\n  graph.updateEdgeData([\n    { id: target.id, style: { labelText: 'Hover me!', stroke: '#5B8FF9', labelFill: 'black', lineWidth: 1 } },\n  ]);\n  graph.draw();\n});\n",title:{zh:"更新标签",en:"Update Label"},filename:"update.js",isNew:!1}],icon:"",id:"update-label",title:{en:"Update Label",zh:"更新标签"},childrenKey:"demos",order:0}],childrenKey:"examples"},{id:"animation",title:{zh:"动画",en:"Animation"},icon:"scatter",examples:[{demos:[{id:"enter",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*f9JTTKw-VNwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 50, y: 50 } },\n      { id: 'node-1', style: { x: 200, y: 50 } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  node: {\n    animation: {\n      enter: [\n        {\n          fields: ['opacity'],\n          duration: 1000,\n          easing: 'linear',\n        },\n      ],\n    },\n  },\n  edge: {\n    animation: {\n      enter: [\n        {\n          fields: ['opacity'],\n          duration: 1000,\n          easing: 'linear',\n        },\n      ],\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    index: 2,\n    duration: 1000,\n    easing: 'linear',\n    add: () => {\n      const { index } = config;\n      const y = 50 + 25 * index;\n      graph.addData({\n        nodes: [\n          { id: `node-${index + 1}`, style: { x: 50, y } },\n          { id: `node-${index + 2}`, style: { x: 200, y } },\n        ],\n        edges: [{ source: `node-${index + 1}`, target: `node-${index + 2}` }],\n      });\n      graph.draw();\n      config.index += 2;\n    },\n  };\n\n  const updateMapper = (key, value) => {\n    const { node, edge } = graph.getOptions();\n    node.animation.enter[0][key] = value;\n    edge.animation.enter[0][key] = value;\n    graph.setNode(node);\n    graph.setEdge(edge);\n  };\n\n  gui.add(config, 'duration', 500, 5000, 100).onChange((duration) => {\n    updateMapper('duration', duration);\n  });\n  // see: https://g.antv.antgroup.com/en/api/animation/waapi#easing-1\n  gui.add(config, 'easing', ['linear', 'ease-in-sine', 'ease-in-cubic']).onChange((easing) => {\n    updateMapper('easing', easing);\n  });\n  gui.add(config, 'add').name('Add Element');\n});\n",title:{zh:"入场动画",en:"Enter Animation"},filename:"enter.js",isNew:!1},{id:"enter-edge-path-in",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*R895Tq952I0AAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, Line, register } from '@antv/g6';\n\nclass PathInLine extends Line {\n  onCreate() {\n    const shape = this.shapeMap.key;\n    const length = shape.getTotalLength();\n    shape.animate([{ lineDash: [0, length] }, { lineDash: [length, 0] }], {\n      duration: 500,\n      fill: 'both',\n    });\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'path-in-line', PathInLine);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 50, y: 50 } },\n      { id: 'node-1', style: { x: 200, y: 50 } },\n    ],\n  },\n  edge: {\n    type: 'path-in-line',\n    animation: {\n      // disable default enter and exit animation\n      enter: false,\n      exit: false,\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    connect: () => {\n      const edge = graph.getEdgeData('edge-1');\n      if (edge) {\n        alert('The edge already exists.');\n        return;\n      }\n\n      graph.addEdgeData([{ id: 'edge-1', source: 'node-0', target: 'node-1' }]);\n      graph.draw();\n    },\n    disconnect: () => {\n      const edge = graph.getEdgeData('edge-1');\n      if (edge) {\n        graph.removeEdgeData(['edge-1']);\n        graph.draw();\n      }\n    },\n  };\n  gui.add(config, 'connect');\n  gui.add(config, 'disconnect');\n});\n",title:{zh:"边路径入场",en:"Edge Path In"},filename:"enter-edge-path-in.js",isNew:!1},{id:"update",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*C1wjRrz-gC8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 50, y: 50 } },\n      { id: 'node-1', style: { x: 200, y: 50 } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  node: {\n    animation: {\n      update: [{ fields: ['x', 'y', 'size'] }, { fields: ['fill'], shape: 'key' }],\n    },\n  },\n  edge: {\n    animation: {\n      update: [{ fields: ['sourceNode', 'targetNode'] }, { fields: ['stroke', 'lineWidth'], shape: 'key' }],\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const colors = ['red', 'blue', 'green', 'yellow', 'black', 'purple', 'orange', 'gray'];\n  let [nextOffsetY, nextSize, nextLineWidth] = [50, 50, 5];\n  const config = {\n    color: () => {\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      graph.updateData({\n        nodes: [\n          { id: 'node-0', style: { fill: color } },\n          { id: 'node-1', style: { fill: color } },\n        ],\n        edges: [{ source: 'node-0', target: 'node-1', style: { stroke: color } }],\n      });\n      graph.draw();\n    },\n    position: () => {\n      const offsetY = nextOffsetY;\n      graph.translateElementBy({\n        'node-0': [0, offsetY],\n        'node-1': [0, offsetY],\n      });\n      nextOffsetY = -nextOffsetY;\n    },\n    size: () => {\n      const size = nextSize;\n      const lineWidth = nextLineWidth;\n      graph.updateData({\n        nodes: [\n          { id: 'node-0', style: { size } },\n          { id: 'node-1', style: { size } },\n        ],\n        edges: [{ source: 'node-0', target: 'node-1', style: { lineWidth } }],\n      });\n      graph.draw();\n      [nextSize, nextLineWidth] = [nextSize === 50 ? 16 : 50, nextLineWidth === 5 ? 1 : 5];\n    },\n  };\n  gui.add(config, 'color').name('fill & stroke');\n  gui.add(config, 'position').name('position');\n  gui.add(config, 'size').name('size & lineWidth');\n});\n",title:{zh:"更新动画",en:"Update Animation"},filename:"update.js",isNew:!1},{id:"exit",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*UGu1Qolzzc4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: Array.from({ length: 10 }, (_, i) => ({\n      id: `node-${i}`,\n      style: { x: i % 2 === 0 ? 50 : 200, y: 25 + 50 * Math.floor(i / 2) },\n    })),\n    edges: Array.from({ length: 5 }, (_, i) => ({\n      id: `edge-${i}`,\n      source: `node-${i * 2}`,\n      target: `node-${i * 2 + 1}`,\n    })),\n  },\n  node: {\n    animation: {\n      exit: [\n        {\n          fields: ['opacity'],\n          duration: 1000,\n          easing: 'linear',\n        },\n      ],\n    },\n  },\n  edge: {\n    animation: {\n      exit: [\n        {\n          fields: ['opacity'],\n          duration: 1000,\n          easing: 'linear',\n        },\n      ],\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    index: 4,\n    duration: 1000,\n    easing: 'linear',\n    remove: () => {\n      const { index } = config;\n      if (index === -1) return;\n      graph.removeData({\n        nodes: [`node-${index * 2}`, `node-${index * 2 + 1}`],\n        edges: [`edge-${index}`],\n      });\n      graph.draw();\n      config.index--;\n    },\n  };\n  const updateMapper = (key, value) => {\n    const { node, edge } = graph.getOptions();\n    node.animation.exit[0][key] = value;\n    edge.animation.exit[0][key] = value;\n    graph.setNode(node);\n    graph.setEdge(edge);\n  };\n  gui.add(config, 'duration', 500, 5000, 100).onChange((duration) => {\n    updateMapper('duration', duration);\n  });\n  // see: https://g.antv.antgroup.com/en/api/animation/waapi#easing-1\n  gui.add(config, 'easing', ['linear', 'ease-in-sine', 'ease-in-cubic']).onChange((easing) => {\n    updateMapper('easing', easing);\n  });\n  gui.add(config, 'remove').name('Remove Element');\n});\n",title:{zh:"退场动画",en:"Exit Animation"},filename:"exit.js",isNew:!1},{id:"combo-collapse-expand",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*wzK3T6oBEg0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-1', combo: 'combo-2', style: { x: 120, y: 100 } },\n      { id: 'node-2', combo: 'combo-1', style: { x: 300, y: 200 } },\n      { id: 'node-3', combo: 'combo-1', style: { x: 200, y: 300 } },\n    ],\n    edges: [\n      { id: 'edge-1', source: 'node-1', target: 'node-2' },\n      { id: 'edge-2', source: 'node-2', target: 'node-3' },\n    ],\n    combos: [\n      {\n        id: 'combo-1',\n        type: 'rect',\n        combo: 'combo-2',\n        style: {\n          collapsed: true,\n        },\n      },\n      { id: 'combo-2' },\n    ],\n  },\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  combo: {\n    style: {\n      labelText: (d) => d.id,\n      lineDash: 0,\n      collapsedLineDash: [5, 5],\n    },\n  },\n  behaviors: [{ type: 'drag-element' }, 'collapse-expand'],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    collapse: () => {\n      graph.collapseElement('combo-1');\n    },\n    expand: () => {\n      graph.expandElement('combo-1');\n    },\n  };\n  gui.add(config, 'collapse');\n  gui.add(config, 'expand');\n});\n",title:{zh:"组合展开/收起",en:"Combo Collapse/Expand"},filename:"combo-collapse-expand.js",isNew:!1}],icon:"",id:"basic",title:{en:"Basic Animation",zh:"基本动画"},childrenKey:"demos",order:0},{demos:[{id:"ant-line",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*EonQSohWxtYAAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, Line, register } from '@antv/g6';\n\nclass AntLine extends Line {\n  onCreate() {\n    const shape = this.shapeMap.key;\n    shape.animate([{ lineDashOffset: -20 }, { lineDashOffset: 0 }], {\n      duration: 500,\n      iterations: Infinity,\n    });\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'ant-line', AntLine);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-1', style: { x: 50, y: 50 } },\n      { id: 'node-2', style: { x: 200, y: 50 } },\n      { id: 'node-3', style: { x: 125, y: 150 } },\n    ],\n    edges: [\n      { source: 'node-1', target: 'node-2' },\n      { source: 'node-2', target: 'node-3' },\n      { source: 'node-3', target: 'node-1' },\n    ],\n  },\n  edge: {\n    type: 'ant-line',\n    style: {\n      lineDash: [10, 10],\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    lineDash: 10,\n  };\n  gui.add(config, 'lineDash', 1, 20, 1).onChange((lineDash) => {\n    graph.setEdge({\n      type: 'ant-line',\n      style: {\n        lineDash: [lineDash, lineDash],\n      },\n    });\n    graph.draw();\n  });\n});\n",title:{zh:"蚂蚁线",en:"Ant Line"},filename:"ant-line.js",isNew:!1},{id:"fly-marker",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*CN6ZQ4M8c80AAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle } from '@antv/g';\nimport { Renderer } from '@antv/g-svg';\nimport { CubicHorizontal, ExtensionCategory, Graph, register, subStyleProps } from '@antv/g6';\n\nclass FlyMarkerCubic extends CubicHorizontal {\n  getMarkerStyle(attributes) {\n    return { r: 5, fill: '#c3d5f9', offsetPath: this.shapeMap.key, ...subStyleProps(attributes, 'marker') };\n  }\n\n  onCreate() {\n    const marker = this.upsert('marker', Circle, this.getMarkerStyle(this.attributes), this);\n    marker.animate([{ offsetDistance: 0 }, { offsetDistance: 1 }], {\n      duration: 3000,\n      iterations: Infinity,\n    });\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'fly-marker-cubic', FlyMarkerCubic);\n\nconst graph = new Graph({\n  container: 'container',\n  renderer: () => new Renderer(),\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 50, y: 50 } },\n      { id: 'node-1', style: { x: 200, y: 200 } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  edge: {\n    type: 'fly-marker-cubic',\n    style: {\n      lineDash: [10, 10],\n    },\n  },\n});\n\ngraph.render();\n",title:{zh:"飞行标记",en:"Fly Marker"},filename:"fly-marker.js",isNew:!1},{id:"breathing-circle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*b-o-R5irgzsAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass BreathingCircle extends Circle {\n  onCreate() {\n    const halo = this.shapeMap.halo;\n    halo.animate([{ lineWidth: 0 }, { lineWidth: 20 }], {\n      duration: 1000,\n      iterations: Infinity,\n      direction: 'alternate',\n    });\n  }\n}\n\nregister(ExtensionCategory.NODE, 'breathing-circle', BreathingCircle);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }],\n  },\n  node: {\n    type: 'breathing-circle',\n    style: {\n      size: 50,\n      halo: true,\n    },\n    palette: ['#3875f6', '#efb041', '#ec5b56', '#72c240'],\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"呼吸效果",en:"Fly Marker"},filename:"breathing-circle.js",isNew:!1},{id:"ripple-circle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*blf6TZXDzckAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle as CircleGeometry } from '@antv/g';\nimport { Renderer } from '@antv/g-svg';\nimport { Circle, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass RippleCircle extends Circle {\n  onCreate() {\n    const { fill } = this.attributes;\n    const r = this.shapeMap.key.style.r;\n    const length = 5;\n    const fillOpacity = 0.5;\n\n    Array.from({ length }).map((_, index) => {\n      const ripple = this.upsert(\n        `ripple-${index}`,\n        CircleGeometry,\n        {\n          r,\n          fill,\n          fillOpacity,\n        },\n        this,\n      );\n      ripple.animate(\n        [\n          { r, fillOpacity },\n          { r: r + length * 5, fillOpacity: 0 },\n        ],\n        {\n          duration: 1000 * length,\n          iterations: Infinity,\n          delay: 1000 * index,\n          easing: 'ease-cubic',\n        },\n      );\n    });\n  }\n}\n\nregister(ExtensionCategory.NODE, 'ripple-circle', RippleCircle);\n\nconst graph = new Graph({\n  container: 'container',\n  renderer: () => new Renderer(),\n  data: {\n    nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }],\n  },\n  node: {\n    type: 'ripple-circle',\n    animation: {\n      enter: false,\n    },\n    style: {\n      size: 50,\n    },\n    palette: ['#3875f6', '#efb041', '#ec5b56', '#72c240'],\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"涟漪效果",en:"Ripple"},filename:"ripple-circle.js",isNew:!1}],icon:"",id:"persistence",title:{en:"Persistence Animation",zh:"持续动画"},childrenKey:"demos",order:1},{demos:[{id:"zoom",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*zZPpRoMmlvMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/force.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'force',\n      },\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      const animation = {\n        duration: 500,\n        easing: 'linear',\n      };\n      const config = {\n        zoomIn: () => {\n          graph.zoomBy(1.2, animation);\n        },\n        zoomOut: () => {\n          graph.zoomBy(0.8, animation);\n        },\n      };\n      gui.add(config, 'zoomIn');\n      gui.add(config, 'zoomOut');\n    });\n  });\n",title:{zh:"视口缩放",en:"Zoom Viewport"},filename:"zoom.js",isNew:!1},{id:"translate",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*zZPpRoMmlvMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/force.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'force',\n      },\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      const animation = {\n        duration: 500,\n        easing: 'linear',\n      };\n      const config = {\n        Up: () => graph.translateBy([0, -50], animation),\n        Down: () => graph.translateBy([0, 50], animation),\n        Left: () => graph.translateBy([-50, 0], animation),\n        Right: () => graph.translateBy([50, 0], animation),\n      };\n      gui.add(config, 'Up').name('⬆️ Up');\n      gui.add(config, 'Down').name('⬇️ Down');\n      gui.add(config, 'Left').name('⬅️ Left');\n      gui.add(config, 'Right').name('➡️ Right');\n    });\n  });\n",title:{zh:"视口平移",en:"Translate Viewport"},filename:"translate.js",isNew:!1},{id:"rotate",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-yI2QqHqPQEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/force.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'force',\n      },\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      const animation = {\n        duration: 500,\n        easing: 'linear',\n      };\n      const config = {\n        clockwise: () => graph.rotateBy(-10, animation),\n        anticlockwise: () => graph.rotateBy(10, animation),\n      };\n      gui.add(config, 'clockwise').name('🔁 Clockwise');\n      gui.add(config, 'anticlockwise').name('🔄 Anti-clockwise');\n    });\n  });\n",title:{zh:"视口旋转",en:"Rotate Viewport"},filename:"rotate.js",isNew:!1}],icon:"",id:"viewport",title:{en:"Viewport Animation",zh:"视口动画"},childrenKey:"demos",order:2}],childrenKey:"examples"},{id:"plugin",title:{zh:"插件",en:"Plugin"},icon:"tool",examples:[{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*JwvxTbOoWQ8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/collection.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const groupedNodesByCluster = data.nodes.reduce((acc, node) => {\n      const cluster = node.data.cluster;\n      acc[cluster] ||= [];\n      acc[cluster].push(node.id);\n      return acc;\n    }, {});\n\n    const createStyle = (baseColor) => ({\n      fill: baseColor,\n      stroke: baseColor,\n      labelFill: '#fff',\n      labelPadding: 2,\n      labelBackgroundFill: baseColor,\n      labelBackgroundRadius: 5,\n    });\n\n    const graph = new Graph({\n      container: 'container',\n      data,\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n      node: {\n        style: { size: 15 },\n        palette: { field: 'cluster' },\n      },\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        linkDistance: (d) => {\n          if (d.source === 'node0' || d.target === 'node0') {\n            return 200;\n          }\n          return 80;\n        },\n      },\n      plugins: [\n        {\n          key: 'bubble-sets-a',\n          type: 'bubble-sets',\n          members: groupedNodesByCluster['a'],\n          labelText: 'cluster-a',\n          ...createStyle('#1783FF'),\n        },\n        {\n          key: 'bubble-sets-b',\n          type: 'bubble-sets',\n          members: groupedNodesByCluster['b'],\n          labelText: 'cluster-b',\n          ...createStyle('#00C9C9'),\n        },\n        {\n          key: 'bubble-sets-c',\n          type: 'bubble-sets',\n          members: groupedNodesByCluster['c'],\n          labelText: 'cluster-c',\n          ...createStyle('#F08F56'),\n        },\n        {\n          key: 'bubble-sets-d',\n          type: 'bubble-sets',\n          members: groupedNodesByCluster['d'],\n          labelText: 'cluster-d',\n          ...createStyle('#D580FF'),\n        },\n      ],\n      autoFit: 'center',\n    });\n\n    graph.render();\n  });\n",title:{zh:"用气泡集包裹节点集",en:"Use Bubblesets to wrap the node sets."},filename:"basic.js",isNew:!1}],icon:"",id:"bubble-sets",title:{en:"Bubblesets",zh:"Bubblesets 气泡集"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*9o1lRbfc3YMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'contextmenu',\n      trigger: 'contextmenu', // 'click' or 'contextmenu'\n      onClick: (v) => {\n        alert('You have clicked the「' + v + '」item');\n      },\n      getItems: () => {\n        return [\n          { name: '展开一度关系', value: 'spread' },\n          { name: '查看详情', value: 'detail' },\n        ];\n      },\n      enable: (e) => e.targetType === 'node',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"上下文菜单",en:"Context Menu"},filename:"basic.js",isNew:!1}],icon:"",id:"contextMenu",title:{en:"ContextMenu",zh:"Contextmenu 上下文菜单"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*s66AQJ3FJMMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: { type: 'grid' },\n  behaviors: ['drag-canvas'],\n  plugins: [{ key: 'grid-line', type: 'grid-line', follow: false }],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  gui\n    .add({ follow: false }, 'follow')\n    .name('Follow')\n    .onChange((value) => {\n      graph.updatePlugin({\n        key: 'grid-line',\n        follow: value,\n      });\n    });\n});\n",title:{zh:"画布网格",en:"Grid Line"},filename:"basic.js",isNew:!1}],icon:"",id:"grid-line",title:{en:"Grid Line",zh:"Grid Line 网格线"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*5K19SrUgO6QAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [{ id: 'node-0', style: { x: 200, y: 150 } }],\n  },\n  node: {\n    style: {\n      size: 60,\n      labelText: 'Drag Me!',\n      labelPlacement: 'middle',\n      labelFill: '#fff',\n    },\n  },\n  behaviors: ['drag-element'],\n  plugins: [\n    {\n      type: 'history',\n      key: 'history',\n    },\n  ],\n});\n\ngraph.render().then(() => {\n  window.addPanel((gui) => {\n    const history = graph.getPluginInstance('history');\n    const config = {\n      undo: () => {\n        if (history.canUndo()) history.undo();\n      },\n      redo: () => {\n        if (history.canRedo()) history.redo();\n      },\n    };\n    gui.add(config, 'undo').name('⬅️ undo');\n    gui.add(config, 'redo').name('➡️ redo');\n  });\n});\n",title:{zh:"撤销重做",en:"Redo/Undo"},filename:"basic.js",isNew:!1}],icon:"",id:"history",title:{en:"History",zh:"History 撤销重做"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*YXHtRZUKAZcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/collection.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const groupedNodesByCluster = data.nodes.reduce((acc, node) => {\n      const cluster = node.data.cluster;\n      acc[cluster] ||= [];\n      acc[cluster].push(node.id);\n      return acc;\n    }, {});\n\n    const createStyle = (baseColor) => ({\n      fill: baseColor,\n      stroke: baseColor,\n      labelFill: '#fff',\n      labelPadding: 2,\n      labelBackgroundFill: baseColor,\n      labelBackgroundRadius: 5,\n    });\n\n    const graph = new Graph({\n      container: 'container',\n      data,\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n      node: {\n        style: { size: 15 },\n        palette: { field: 'cluster' },\n      },\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        linkDistance: (d) => {\n          if (d.source === 'node0' || d.target === 'node0') {\n            return 200;\n          }\n          return 80;\n        },\n      },\n      plugins: [\n        {\n          key: 'hull-a',\n          type: 'hull',\n          members: groupedNodesByCluster['a'],\n          labelText: 'cluster-a',\n          ...createStyle('#1783FF'),\n        },\n        {\n          key: 'hull-b',\n          type: 'hull',\n          members: groupedNodesByCluster['b'],\n          labelText: 'cluster-b',\n          ...createStyle('#00C9C9'),\n        },\n        {\n          key: 'hull-c',\n          type: 'hull',\n          members: groupedNodesByCluster['c'],\n          labelText: 'cluster-c',\n          ...createStyle('#F08F56'),\n        },\n        {\n          key: 'hull-d',\n          type: 'hull',\n          members: groupedNodesByCluster['d'],\n          labelText: 'cluster-d',\n          ...createStyle('#D580FF'),\n        },\n      ],\n      autoFit: 'center',\n    });\n\n    graph.render();\n  });\n",title:{zh:"用轮廓包裹节点集合",en:"Use hulls to wrap the node sets."},filename:"basic.js",isNew:!1}],icon:"",id:"hull",title:{en:"Hull",zh:"Hull 节点集轮廓包裹"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*u9w9T7X5fZoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', type: 'circle', data: { cluster: 'node-type1' } },\n    { id: 'node-2', type: 'rect', data: { cluster: 'node-type2' } },\n    { id: 'node-3', type: 'triangle', data: { cluster: 'node-type3' } },\n    { id: 'node-4', type: 'diamond', data: { cluster: 'node-type4' } },\n  ],\n  edges: [\n    { source: 'node-1', target: 'node-2', data: { cluster: 'edge-type1' } },\n    { source: 'node-1', target: 'node-4', data: { cluster: 'edge-type2' } },\n    { source: 'node-3', target: 'node-4' },\n    { source: 'node-2', target: 'node-4', data: { cluster: 'edge-type3' } },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: { size: 32 },\n    palette: {\n      field: 'cluster',\n    },\n  },\n  layout: {\n    type: 'force',\n  },\n  plugins: [\n    {\n      type: 'legend',\n      nodeField: 'cluster',\n      edgeField: 'cluster',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"默认图例",en:"Default legend"},filename:"basic.js",isNew:!1},{id:"click",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*YMxxTZwt54UAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: '1', type: 'circle', data: { cluster: 'node-type1' } },\n    { id: '2', type: 'rect', data: { cluster: 'node-type2' } },\n    { id: '3', type: 'triangle', data: { cluster: 'node-type3' } },\n    { id: '4', type: 'diamond', data: { cluster: 'node-type4' } },\n  ],\n  edges: [\n    { source: '1', target: '2', type: 'quadratic', data: { cluster: 'edge-type1' } },\n    { source: '1', target: '4', data: { cluster: 'edge-type2' } },\n    { source: '3', target: '4' },\n    { source: '2', target: '4', data: { cluster: 'edge-type3' } },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: { size: 32 },\n    palette: { field: 'cluster' },\n  },\n  edge: {\n    palette: { field: 'cluster' },\n  },\n  layout: {\n    type: 'force',\n  },\n  plugins: [\n    {\n      type: 'legend',\n      nodeField: 'cluster',\n      edgeField: 'cluster',\n      trigger: 'click',\n      gridRow: 1,\n      gridCol: 4,\n      itemLabelFontSize: 12,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"点击图例",en:"Click legend"},filename:"click.js",isNew:!1},{id:"style",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*DgNhR5MeC9kAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    {\n      id: '1',\n      type: 'circle',\n      data: { cluster: 'node-type1' },\n    },\n    {\n      id: '2',\n      type: 'rect',\n      data: { cluster: 'node-type2' },\n    },\n    {\n      id: '3',\n      type: 'triangle',\n      data: { cluster: 'node-type3' },\n    },\n    {\n      id: '4',\n      type: 'diamond',\n      data: { cluster: 'node-type4' },\n    },\n  ],\n  edges: [\n    {\n      id: '1-2',\n      source: '1',\n      target: '2',\n      type: 'quadratic',\n      data: { cluster: 'edge-type1' },\n    },\n    {\n      id: '1-4',\n      source: '1',\n      target: '4',\n      data: { cluster: 'edge-type2' },\n    },\n    {\n      id: '3-4',\n      source: '3',\n      target: '4',\n    },\n    {\n      id: '2-4',\n      source: '2',\n      target: '4',\n      data: { cluster: 'edge-type3' },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: { size: 32 },\n    palette: { field: 'cluster' },\n  },\n  edge: {\n    palette: { field: 'cluster' },\n  },\n  layout: {\n    type: 'force',\n  },\n  plugins: [\n    {\n      type: 'legend',\n      nodeField: 'cluster',\n      edgeField: 'cluster',\n      titleText: 'Legend Title',\n      trigger: 'click',\n      position: 'top',\n      gridCol: 3,\n      itemLabelFontSize: 12,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"图例项样式",en:"Item style"},filename:"style.js",isNew:!1}],icon:"",id:"legend",title:{en:"Legend",zh:"Legend 图例"},childrenKey:"demos",order:0},{demos:[{id:"time",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*94CATK7VwhQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst startTime = new Date('2023-08-01').getTime();\nconst diff = 3600 * 24 * 1000;\nconst timebarData = [10, 2, 3, 4, 15, 10, 5, 0, 3, 1].map((value, index) => ({\n  time: new Date(startTime + index * diff),\n  value,\n  label: new Date(startTime + index * diff).toLocaleString(),\n}));\nconst graphData = {\n  nodes: new Array(49).fill(0).map((_, index) => ({\n    id: `node-${index}`,\n    data: {\n      timestamp: startTime + (index % 10) * diff,\n      value: index % 20,\n      label: new Date(startTime + (index % 10) * diff).toLocaleString(),\n    },\n  })),\n  edges: new Array(49).fill(0).map((_, i) => ({\n    id: `edge-${i}`,\n    source: `node-${i % 30}`,\n    target: `node-${(i % 20) + 29}`,\n    data: {\n      edgeType: 'e1',\n    },\n  })),\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data: graphData,\n  behaviors: ['drag-canvas', 'drag-element', 'zoom-canvas'],\n  layout: {\n    type: 'grid',\n    cols: 7,\n  },\n  plugins: [\n    {\n      type: 'timebar',\n      key: 'timebar',\n      data: timebarData,\n      width: 450,\n      loop: true,\n    },\n  ],\n  autoFit: 'view',\n  padding: [10, 0, 65, 0],\n});\n\ngraph.render();\n",title:{zh:"时间模式",en:"Time Mode"},filename:"time.js",isNew:!1},{id:"chart",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*RjCKS6xdRWwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst startTime = new Date('2023-08-01').getTime();\nconst diff = 3600 * 24 * 1000;\nconst timebarData = [10, 2, 3, 4, 15, 10, 5, 0, 3, 1].map((value, index) => ({\n  time: new Date(startTime + index * diff),\n  value,\n  label: new Date(startTime + index * diff).toLocaleString(),\n}));\nconst graphData = {\n  nodes: new Array(49).fill(0).map((_, index) => ({\n    id: `node-${index}`,\n    data: {\n      timestamp: startTime + (index % 10) * diff,\n      value: index % 20,\n      label: new Date(startTime + (index % 10) * diff).toLocaleString(),\n    },\n  })),\n  edges: new Array(49).fill(0).map((_, i) => ({\n    id: `edge-${i}`,\n    source: `node-${i % 30}`,\n    target: `node-${(i % 20) + 29}`,\n    data: {\n      edgeType: 'e1',\n    },\n  })),\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data: graphData,\n  behaviors: ['drag-canvas', 'drag-element', 'zoom-canvas'],\n  layout: {\n    type: 'grid',\n    cols: 7,\n  },\n  plugins: [\n    {\n      type: 'timebar',\n      key: 'timebar',\n      data: timebarData,\n      width: 450,\n      height: 100,\n      loop: true,\n      timebarType: 'chart',\n    },\n  ],\n  autoFit: 'view',\n  padding: [10, 0, 160, 0],\n});\n\ngraph.render();\n",title:{zh:"图表模式",en:"Chart Mode"},filename:"chart.js",isNew:!1}],icon:"",id:"timebar",title:{en:"Timebar",zh:"Timebar 时间条"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*IXshSoyeZHEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'toolbar',\n      position: 'top-left',\n      onClick: (item) => {\n        alert('item clicked:' + item);\n      },\n      getItems: () => {\n        // G6 内置了 9 个 icon，分别是 zoom-in、zoom-out、redo、undo、edit、delete、auto-fit、export、reset\n        return [\n          { id: 'zoom-in', value: 'zoom-in' },\n          { id: 'zoom-out', value: 'zoom-out' },\n          { id: 'redo', value: 'redo' },\n          { id: 'undo', value: 'undo' },\n          { id: 'edit', value: 'edit' },\n          { id: 'delete', value: 'delete' },\n          { id: 'auto-fit', value: 'auto-fit' },\n          { id: 'export', value: 'export' },\n          { id: 'reset', value: 'reset' },\n        ];\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"工具栏",en:"ToolBar"},filename:"basic.js",isNew:!1},{id:"custom",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*U_72RJtvwEIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\n// Use your own iconfont.\nconst iconFont = document.createElement('script');\niconFont.src = '//at.alicdn.com/t/font_8d5l8fzk5b87iudi.js';\ndocument.head.appendChild(iconFont);\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'toolbar',\n      position: 'right-top',\n      onClick: (item) => {\n        alert('item clicked:' + item);\n      },\n      getItems: () => {\n        return [\n          { id: 'icon-xinjian', value: 'new' },\n          { id: 'icon-fenxiang', value: 'share' },\n          { id: 'icon-chexiao', value: 'undo' },\n        ];\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"自定义工具栏",en:"ToolBar"},filename:"custom.js",isNew:!1}],icon:"",id:"toolbar",title:{en:"ToolBar",zh:"Toolbar 工具栏"},childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ErhbR7ErhRwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: '0', data: { label: 'node-0', description: 'This is node-0.' } },\n      { id: '1', data: { label: 'node-1', description: 'This is node-1.' } },\n      { id: '2', data: { label: 'node-2', description: 'This is node-2.' } },\n      { id: '3', data: { label: 'node-3', description: 'This is node-3.' } },\n      { id: '4', data: { label: 'node-4', description: 'This is node-4.' } },\n      { id: '5', data: { label: 'node-5', description: 'This is node-5.' } },\n    ],\n    edges: [\n      { source: '0', target: '1', data: { description: 'This is edge from node 0 to node 1.' } },\n      { source: '0', target: '2', data: { description: 'This is edge from node 0 to node 2.' } },\n      { source: '0', target: '3', data: { description: 'This is edge from node 0 to node 3.' } },\n      { source: '0', target: '4', data: { description: 'This is edge from node 0 to node 4.' } },\n      { source: '0', target: '5', data: { description: 'This is edge from node 0 to node 5.' } },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  plugins: [\n    {\n      type: 'tooltip',\n      getContent: (e, items) => {\n        let result = `<h4>Custom Content</h4>`;\n        items.forEach((item) => {\n          result += `<p>Type: ${item.data.description}</p>`;\n        });\n        return result;\n      },\n    },\n  ],\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"提示框",en:"Tooltip"},filename:"basic.js",isNew:!1},{id:"click",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ErhbR7ErhRwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: '0', data: { label: 'node-0', description: 'This is node-0.' } },\n      { id: '1', data: { label: 'node-1', description: 'This is node-1.' } },\n      { id: '2', data: { label: 'node-2', description: 'This is node-2.' } },\n      { id: '3', data: { label: 'node-3', description: 'This is node-3.' } },\n      { id: '4', data: { label: 'node-4', description: 'This is node-4.' } },\n      { id: '5', data: { label: 'node-5', description: 'This is node-5.' } },\n    ],\n    edges: [\n      { source: '0', target: '1', data: { description: 'This is edge from node 0 to node 1.' } },\n      { source: '0', target: '2', data: { description: 'This is edge from node 0 to node 2.' } },\n      { source: '0', target: '3', data: { description: 'This is edge from node 0 to node 3.' } },\n      { source: '0', target: '4', data: { description: 'This is edge from node 0 to node 4.' } },\n      { source: '0', target: '5', data: { description: 'This is edge from node 0 to node 5.' } },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  plugins: [\n    {\n      type: 'tooltip',\n      trigger: 'click',\n      getContent: (e, items) => {\n        let result = `<h4>Custom Content</h4>`;\n        items.forEach((item) => {\n          result += `<p>Type: ${item.data.description}</p>`;\n        });\n        return result;\n      },\n    },\n  ],\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"点击触发",en:"Show on click"},filename:"click.js",isNew:!1}],icon:"",id:"tooltip",title:{en:"Tooltip",zh:"Tooltip 提示框"},childrenKey:"demos",order:0},{demos:[{id:"text",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*GPRuRqBUIsoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: { type: 'grid' },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'watermark',\n      text: 'G6: Graph Visualization',\n      textFontSize: 14,\n      textFontFamily: 'Microsoft YaHei',\n      fill: 'rgba(0, 0, 0, 0.1)',\n      rotate: Math.PI / 12,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"文本水印",en:"Text Watermark"},filename:"text.js",isNew:!1},{id:"repeat",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*8NfwR5QEXvIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'watermark',\n      width: 200,\n      height: 100,\n      rotate: Math.PI / 12,\n      imageURL: 'https://gw.alipayobjects.com/os/s/prod/antv/assets/image/logo-with-text-73b8a.svg',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"重复图片",en:"Repeat Image"},filename:"repeat.js",isNew:!1},{id:"background",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*eCkYR7cLfWwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  width: 800,\n  height: 600,\n  data,\n  layout: { type: 'grid' },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'watermark',\n      width: 1280,\n      height: 830,\n      rotate: 0,\n      opacity: 0.7,\n      imageURL: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*0Qq0ToQm1rEAAAAAAAAAAAAADmJ7AQ/original',\n      backgroundSize: 'cover',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"背景图片",en:"Background Image"},filename:"background.js",isNew:!1}],icon:"",id:"watermark",title:{en:"Watermark",zh:"Watermark 水印"},childrenKey:"demos",order:0}],childrenKey:"examples"},{id:"algorithm",title:{zh:"算法",en:"Algorithm"},icon:"gallery",examples:[{demos:[{id:"pattern-matching",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*a9eSQa4f4Y4AAAAAAAAAAAAADmJ7AQ/original",source:"/**\n * 图模式匹配\n */\nimport { GADDI } from '@antv/algorithm';\nimport { Graph } from '@antv/g6';\n\nconst colors = ['#5F95FF', '#61DDAA', '#65789B'];\n\nconst defaultPalette = {\n  type: 'group',\n  field: 'cluster',\n  color: colors,\n};\n\nconst button = document.createElement('button');\nbutton.innerHTML = `Click Here to Match 点此开始匹配`;\ndocument.getElementById('container').appendChild(button);\n\nconst pattern = {\n  nodes: [\n    {\n      id: 'pn0',\n      cluster: 'nodeType-0',\n    },\n    {\n      id: 'pn1',\n      cluster: 'nodeType-1',\n    },\n    {\n      id: 'pn2',\n      cluster: 'nodeType-2',\n    },\n  ],\n  edges: [\n    { source: 'pn1', target: 'pn0', cluster: 'edgeType-1' },\n    { source: 'pn1', target: 'pn2', cluster: 'edgeType-0' },\n    { source: 'pn2', target: 'pn0', cluster: 'edgeType-2' },\n  ],\n};\n\nfetch('https://assets.antv.antgroup.com/g6/gaddi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      node: {\n        style: {\n          labelPlacement: 'center',\n          labelText: (d) => d.label,\n          stroke: '#5F95FF',\n          lineWidth: 1,\n        },\n        palette: defaultPalette,\n      },\n      edge: {\n        style: {\n          endArrow: true,\n        },\n        palette: defaultPalette,\n      },\n      plugins: [\n        {\n          type: 'legend',\n          nodeField: 'cluster',\n          edgeField: 'cluster',\n          position: 'top',\n        },\n        {\n          key: 'hull-0',\n          type: 'hull',\n          members: [],\n        },\n        {\n          key: 'hull-1',\n          type: 'hull',\n          members: [],\n        },\n      ],\n    });\n    graph.render();\n\n    button.addEventListener('click', (e) => {\n      const matches = GADDI(data, pattern, true, undefined, undefined, 'cluster', 'cluster');\n\n      matches.forEach((match, i) => {\n        graph.updatePlugin({\n          key: `hull-${i}`,\n          members: match.nodes.map((node) => node.id),\n        });\n      });\n      graph.render();\n      button.innerHTML = `The results are marked with hulls 结果已用轮廓标记`;\n      button.disabled = true;\n    });\n  });\n",title:{zh:"图模式匹配",en:"Graph pattern matching"},filename:"pattern-matching.js",isNew:!1},{id:"shortest-path",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*wQy2TZkb-VgAAAAAAAAAAAAADmJ7AQ/original",source:"/**\n * 最短路径\n */\nimport { findShortestPath } from '@antv/algorithm';\nimport { CanvasEvent, Graph, NodeEvent, idOf } from '@antv/g6';\n\nconst arrayToObject = (array, value) => {\n  return array.reduce((obj, key) => {\n    obj[key] = value;\n    return obj;\n  }, {});\n};\n\nconst formatData = (data) => {\n  const newData = data;\n  const { nodes } = newData;\n  const newNodes = nodes.map((node) => ({\n    ...node,\n    style: {\n      x: node.x,\n      y: node.y,\n    },\n  }));\n  newData.nodes = newNodes;\n  return newData;\n};\n\nconst tipDiv = document.createElement('div');\ntipDiv.innerHTML = `Press 'shift' and click two nodes to select begin and end nodes. 按住 'shift' 并点选两个节点作为起点和终点。`;\ndocument.getElementById('container').appendChild(tipDiv);\n\nconst button = document.createElement('button');\nbutton.innerHTML = `查看最短路径`;\ndocument.getElementById('container').appendChild(button);\n\nfetch('https://gw.alipayobjects.com/os/bmw-prod/b0ca4b15-bd0c-43ec-ae41-c810374a1d55.json')\n  .then((res) => res.json())\n  .then((mockData) => {\n    const data = formatData(mockData);\n    const graph = new Graph({\n      container: 'container',\n      data: formatData(mockData),\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'click-select'],\n      autoFit: 'view',\n    });\n\n    graph.render();\n\n    const clearStates = () => {\n      graph.setElementState(\n        Object.fromEntries([...graph.getNodeData(), ...graph.getEdgeData()].map((element) => [idOf(element), []])),\n      );\n    };\n\n    graph.on(`canvas:${CanvasEvent.CLICK}`, (e) => {\n      clearStates();\n    });\n\n    // store the selected nodes according to the clicked order\n    let selectedNodeIds = [];\n    graph.on(`node:${NodeEvent.CLICK}`, (event) => {\n      const {\n        target: { id },\n      } = event;\n      const index = selectedNodeIds.indexOf(id);\n\n      if (graph.getElementState(id).includes('selected')) {\n        graph.setElementState(id, []);\n        selectedNodeIds.splice(index, 1);\n      } else if (!graph.getElementState(id).includes('selected')) {\n        graph.setElementState(id, 'selected');\n        selectedNodeIds.push(id);\n      }\n    });\n\n    graph.on(`canvas:${CanvasEvent.CLICK}`, (e) => {\n      selectedNodeIds = [];\n    });\n\n    button.addEventListener('click', (e) => {\n      if (selectedNodeIds.length !== 2) {\n        alert('Please select TWO nodes!\\n\\r请选择有且两个节点！');\n        return;\n      }\n      clearStates();\n      const { path } = findShortestPath(data, selectedNodeIds[0], selectedNodeIds[1], true);\n      selectedNodeIds = [];\n\n      if (path?.length) {\n        const pathNodeMap = {};\n        path.forEach((id) => {\n          pathNodeMap[id] = true;\n        });\n        graph.frontElement(path);\n        graph.setElementState(arrayToObject(path, 'highlight'));\n\n        let highlightEdges = [];\n        let inactiveEdges = [];\n        let inactiveNodes = [];\n\n        graph.getEdgeData().forEach((edge) => {\n          const { source, target } = edge;\n          const sourceInPathIdx = path.indexOf(source);\n          const targetInPathIdx = path.indexOf(target);\n          if (sourceInPathIdx === -1 || targetInPathIdx === -1) return;\n          if (Math.abs(sourceInPathIdx - targetInPathIdx) === 1) {\n            highlightEdges.push(edge.id);\n          } else {\n            inactiveEdges.push(edge.id);\n          }\n        });\n\n        graph.getNodeData().forEach((node) => {\n          if (!pathNodeMap[node.id]) {\n            inactiveNodes.push(node.id);\n          }\n        });\n\n        graph.setElementState(arrayToObject(highlightEdges, 'highlight'));\n        graph.setElementState(arrayToObject(inactiveEdges, 'inactive'));\n        graph.setElementState(arrayToObject(inactiveNodes, 'inactive'));\n      }\n    });\n  });\n",title:{zh:"最短路径",en:"Shortest path"},filename:"shortest-path.js",isNew:!1},{id:"label-propagation",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*1QHsR4wHCKwAAAAAAAAAAAAADmJ7AQ/original",source:"/**\n * LP 自动聚类\n */\nimport { labelPropagation } from '@antv/algorithm';\nimport { Graph } from '@antv/g6';\n\nconst button = document.createElement('button');\nbutton.innerHTML = `Click Here to Clustering 点此自动聚类`;\ndocument.getElementById('container').appendChild(button);\n\nconst subjectColors = [\n  '#5F95FF', // blue\n  '#61DDAA',\n  '#65789B',\n  '#F6BD16',\n  '#7262FD',\n  '#78D3F8',\n  '#9661BC',\n  '#F6903D',\n  '#008685',\n  '#F08BB4',\n];\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      layout: {\n        type: 'force',\n        linkDistance: 50,\n      },\n    });\n    graph.render();\n\n    button.addEventListener('click', (e) => {\n      const clusteredData = labelPropagation(data, false);\n      let newNodeData = [];\n      clusteredData.clusters.forEach((cluster, i) => {\n        const color = subjectColors[i % subjectColors.length];\n        const nodes = cluster.nodes.map((node) => ({\n          id: node.id,\n          style: {\n            fill: color,\n          },\n        }));\n        newNodeData.push(...nodes);\n      });\n      graph.updateNodeData(newNodeData);\n      graph.draw();\n    });\n  });\n",title:{zh:"LP 自动聚类",en:"LP automatic clustering"},filename:"label-propagation.js",isNew:!1},{id:"louvain",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*1QHsR4wHCKwAAAAAAAAAAAAADmJ7AQ/original",source:"/**\n * LOUVAIN 自动聚类\n */\nimport { louvain } from '@antv/algorithm';\nimport { Graph } from '@antv/g6';\n\nconst button = document.createElement('button');\nbutton.innerHTML = `Click Here to Clustering 点此自动聚类`;\ndocument.getElementById('container').appendChild(button);\n\nconst subjectColors = [\n  '#5F95FF', // blue\n  '#61DDAA',\n  '#65789B',\n  '#F6BD16',\n  '#7262FD',\n  '#78D3F8',\n  '#9661BC',\n  '#F6903D',\n  '#008685',\n  '#F08BB4',\n];\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      layout: {\n        type: 'force',\n        linkDistance: 50,\n      },\n    });\n    graph.render();\n\n    button.addEventListener('click', (e) => {\n      const clusteredData = louvain(data, false);\n      let newNodeData = [];\n      clusteredData.clusters.forEach((cluster, i) => {\n        const color = subjectColors[i % subjectColors.length];\n        const nodes = cluster.nodes.map((node) => ({\n          id: node.id,\n          style: {\n            fill: color,\n          },\n        }));\n        newNodeData.push(...nodes);\n      });\n      graph.updateNodeData(newNodeData);\n      graph.draw();\n    });\n  });\n",title:{zh:"LOUVAIN 自动聚类",en:"LOUVAIN automatic clustering"},filename:"louvain.js",isNew:!1}],icon:"",id:"case",title:{en:"Graph Algorithm Practice",zh:"图算法应用"},childrenKey:"demos",order:5}],childrenKey:"examples"}]}},children:n})}}}]);